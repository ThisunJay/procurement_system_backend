{"version":3,"sources":["Components/asserts/signin/img/img-03.png","Components/asserts/img/build.png","Components/asserts/img/pen.png","Components/asserts/img/delivery.png","Components/asserts/img/construction.png","Components/asserts/loading2.svg","Components/Controller/Config.controller.js","Components/Controller/Common.controller.js","Components/SignIn/Sign.js","Components/Routes/index.js","Components/Redux/Action/authAction.js","Components/Redux/Action/types.js","Components/Common/Sidebar.js","Components/Controller/Admin.controller.js","Components/Controller/Util.controller.js","Components/Admin/Dashboard.js","Components/Admin/Loading.js","Components/Admin/Components/Sitemangers.Admin.js","Components/Admin/Components/createUser.Admin.js","Components/Admin/Components/Suplier.Admin.js","Components/Admin/Components/Order.Admin.js","Components/Admin/Components/single.site.js","Components/Admin/Components/Single.Order.js","Components/Admin/Components/Sites.Admin.js","Components/Controller/Items.controller.js","Components/Admin/Components/Items.Admin.js","Components/Admin/Components/addItems.Admin.js","Components/Orders/approved.order.js","Components/Orders/reject.order.js","Components/Orders/pending.order.js","Components/Routes/manager.route.js","Components/Routes/accountant.route.js","Components/Orders/supplier_completed.js","Components/Orders/supplier_pending.js","Components/Routes/suplier.route.js","RootRouter.js","Components/Redux/Reducers/authReducer.js","Components/Redux/Reducers/index.js","Components/Redux/Store/Store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","obj","this","host","port","password","_msg","_title","confirmAlert","title","message","buttons","label","url","replace","x","toString","msg","toast","hideProgressBar","closeOnClick","draggable","error","confirm","cancel","onClick","common_sign","username","requestData","email","Promise","resolve","reject","Axios","post","Config","api","signin","then","result","code","data","catch","err","SignIn","formValueChange","e","setState","target","name","value","onSubmit","a","preventDefault","console","log","state","CommonController","response","props","setCurrentUser","role","history","push","clear","className","data-tilt","src","img_1","alt","data-validate","type","placeholder","onChange","required","aria-hidden","Component","indexRoutes","path","component","connect","user","withRouter","exact","AdminSidebar","signoutuser","auth","SignOut","change_toggle","addSuplierState","side_bar_toggle","active","role_name","icon","faBars","style","lineHeight","fontWeight","to","faTachometerAlt","faHourglassHalf","faCheck","faUser","faUserPlus","faTruck","faSuitcase","faThList","faBarcode","fontSize","faSignOutAlt","React","mapDispatchToProps","register_site_manager","status","register_suppliers","get_all_site_managers","get","get_all_site_managers_api","get_all_suppliers","get_all_supliers_api","get_all_site_users_details","get_all_site_users_api","get_all_orders","get_single_order","id","get_all_sites","all_sites","get_all_stats","all_stats","get_recent_details","recent","get_all_stats_by_months","by_month","get_order_by_site_id","get_single_site","add_site","update_state","patch","gettotal","items","reduce","acc","current","item","price","quantity","current_state","parseInt","state_color","Dashboard","componentDidMount","AdminController","counts","loading","get_data_filteration","orders","m_today","moment","Date","format","today","prev","subtract","dataset","c","dt","numberoforders","find","findIndex","date","setDate","getDate","dates","map","val","no_of_orders","main_loading","display","row","i","key","_id","length","slice","numberWithCommas","faEye","getStyle","backgroundColor","deleteRequest","setGreeting","h","getHours","countbytype","forEach","monthwise","cardstyle","user_count","supplier_count","img_pending","pending_orders","img_delivery","completed_orders","img_sites","site_count","img_construction","item_count","labels","datasets","borderColor","options","options1","width","height","legend","position","scope","sort","b","splice","colSpan","scaleShowGridLines","scaleGridLineColor","scaleGridLineWidth","scaleShowHorizontalLines","scaleShowVerticalLines","bezierCurve","bezierCurveTension","pointDot","pointDotRadius","pointDotStrokeWidth","pointHitDetectionRadius","datasetStroke","datasetStrokeWidth","datasetFill","scales","xAxes","gridLines","yAxes","ticks","beginAtZero","precision","Loader","SiteManagersAdmin","addManagerState","ADMIN","res","site_managers_arry","filter","display_all_site_managers","data_arry","contact_number","designation","contactNumber","site_location","site_code","viewUser","showUserModal","singleUser","show","Modal","size","centered","onHide","Header","closeButton","Title","Body","href","faEnvelope","createUser","handleChange","selectedOption","role_number","setToast","setErrorToast","all_users","disabled","hidden","SupliersAdmin","get_all_suppliers_func","suppliers_arry","phoneNo","address","display_all_supliers","OrderAdmin","Sites","match","params","site","readOnly","SingleOrder","getData","site_id","order","supplier","current_site","Submit","Approve","comment","cm","note","Reject","by","showAlert","render_state","site_manager","calendar","rows","renderOptions","insertItem","axios","get_all_items","deleteItem","delete","ItemsAdmin","load_items_data","results","isLoaded","itemsList","renderAllItems","item_id","item_name","description","onPressDeleteItem","setDeleteConfirmAlert","supplierList","AddItemsAdmin","load_data","handleSelect","event","sup","supplierName","renderSessions","lectList","deleted","CompletedOrders","RejectedOrders","PendingOrders","SiteManagerAdmin","SuppliersAdmin","OrderManagement","SitesManagment","SingleSite","ItemsManagement","AddItem","ApprovedOrders","SupplierPending","myemail","my_supplier_id","App","router","routes","checkSignedIn","isAuthenticated","managerRoutes","accountantRoutes","suplierRoutes","prop","initialState","persistconfig","storage","whitelist","rootReducer","combineReducers","action","isEmpty","persistReducer","undefined","middleware","thunk","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","f","persistor","persistStore","configure","RootRouter","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7fa5e775.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img-03.826dea71.png\";","module.exports = __webpack_public_path__ + \"static/media/build.3fa74376.png\";","module.exports = __webpack_public_path__ + \"static/media/pen.d7f32182.png\";","module.exports = __webpack_public_path__ + \"static/media/delivery.2c41e1f7.png\";","module.exports = __webpack_public_path__ + \"static/media/construction.412adb24.png\";","module.exports = __webpack_public_path__ + \"static/media/loading2.cc637824.svg\";","// import confirm alerts\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport { toast } from 'react-toastify';\r\nimport Axios from 'axios'\r\n\r\n\r\nclass Config {\r\n    constructor() {\r\n        //backend server details\r\n          this.host = \"https://procurement-backend.herokuapp.com\";\r\n          this.port = \"\";\r\n        this.password = \"Default@123\"\r\n    }\r\n    // alert show\r\n    showAlert(_msg, _title) {\r\n        confirmAlert({\r\n            title: _title || \"Alert\",\r\n            message: _msg,\r\n            buttons: [\r\n                {\r\n                    label: \"Ok\"\r\n                }\r\n            ]\r\n        });\r\n\r\n        return 0;\r\n    }\r\n    setImage(url) {\r\n        return `${this.host}${this.port}/${url.replace(/\\\\/g, '/')}`\r\n    }\r\n\r\n    numberWithCommas(x) {\r\n        return x.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\r\n    }\r\n\r\n    setToast(msg) {\r\n        toast(msg, {\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            draggable: true,\r\n        });\r\n    }\r\n\r\n    setErrorToast(msg) {\r\n        toast.error(msg, {\r\n            hideProgressBar: true,\r\n            closeOnClick: true,\r\n            draggable: true,\r\n        });\r\n    }\r\n    setDeleteConfirmAlert(title, msg, confirm, cancel) {\r\n        confirmAlert({\r\n            title: title,\r\n            message: msg,\r\n            buttons: [\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () => confirm()\r\n                },\r\n                {\r\n                    label: 'No',\r\n                    onClick: () => cancel()\r\n                }\r\n            ]\r\n        });\r\n    }\r\n}\r\n\r\nvar obj = new Config();\r\nexport default obj;\r\n\r\n","import Config from './Config.controller'\r\nimport Axios from 'axios'\r\n\r\nclass Common {\r\n    constructor() {\r\n        this.api = {\r\n            signin: \"/api/users/signin\",\r\n        };\r\n    }\r\n    // sign in\r\n    common_sign = (username, password) => {\r\n        var requestData = {\r\n            email: username,\r\n            password: password\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            return Axios.post(`${Config.host}${Config.port}${this.api.signin}`, requestData)\r\n                .then(result => {\r\n                    resolve({ code: 200, data: result.data })\r\n                })\r\n                .catch(err => {\r\n                    reject({ code: 0, error: err })\r\n                })\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nvar obj = new Common();\r\nexport default obj;\r\n","      /*  eslint-disable */\r\nimport React, { Component } from 'react';\r\nimport '../asserts/signin/css/main.css'\r\nimport '../asserts/signin/css/util.css'\r\nimport img_1 from '../asserts/signin/img/img-03.png'\r\nimport { setCurrentUser } from \"../Redux/Action/authAction\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport CommonController from '../Controller/Common.controller'\r\nclass SignIn extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        };\r\n\r\n    }\r\n\r\n    formValueChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    onSubmit = async (e) => {\r\n        e.preventDefault()\r\n        console.log(this.state.username);\r\n        console.log(this.state.password);\r\n\r\n        CommonController.common_sign(this.state.username, this.state.password).then(response=>{\r\n            console.log(response.data.data);\r\n            if(response.code == 200){\r\n                this.props.setCurrentUser(response.data.data);\r\n                if(response.data.data.role == 0 ){\r\n                     this.props.history.push(\"/admin/pending\");\r\n                }else if(response.data.data.role == 1 ){\r\n                    this.props.history.push(\"/\");\r\n                }else{\r\n                     this.props.history.push(\"/admin/dashboard\");\r\n                }\r\n               \r\n            }\r\n        }).catch(err =>{\r\n\r\n        })\r\n        \r\n      \r\n\r\n    }\r\n    clear = () => {\r\n        this.setState({\r\n            username: '',\r\n            password: ''\r\n        })\r\n    }\r\n    render() {\r\n        const { username, password } = this.state\r\n        return (\r\n            <div className=\"container-fluid bg-light\" >\r\n                <div className=\"limiter\">\r\n                    <div className=\"container-login100\">\r\n                        <div className=\"wrap-login100 bg-light\">\r\n                            <div className=\"login100-pic js-tilt\" data-tilt>\r\n                                <img src={img_1} alt=\"IMG\" />\r\n                            </div>\r\n                            <form className=\"login100-form validate-form\" onSubmit={(e) => this.onSubmit(e)}>\r\n                                <span className=\"login100-form-title font-weight-bold\">\r\n                                Welcome to Login Portal<br></br>\r\n                                <span className=\"text-muted small\">Procurement Coop.</span>\r\n                                </span>\r\n                                <div className=\"wrap-input100 validate-input\" data-validate=\"Valid email is required: ex@abc.xyz\">\r\n                                    <input className=\"input100\" type=\"text\" name=\"username\" value={username} placeholder=\"Enter Username\" onChange={(e) => this.formValueChange(e)} required />\r\n                                    <span className=\"focus-input100\"></span>\r\n                                    <span className=\"symbol-input100\">\r\n                                        <i className=\"fa fa-envelope\" aria-hidden=\"true\"></i>\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"wrap-input100 validate-input\" data-validate=\"Password is required\">\r\n                                    <input className=\"input100\" type=\"password\" name=\"password\" value={password} placeholder=\"Enter Password\" onChange={(e) => this.formValueChange(e)} required />\r\n                                    <span className=\"focus-input100\"></span>\r\n                                    <span className=\"symbol-input100\">\r\n                                        <i className=\"fa fa-lock\" aria-hidden=\"true\"></i>\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"container-login100-form-btn\">\r\n                                    <button className=\"login100-form-btn\">\r\n                                        Login\r\n                                    </button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default connect(null, { setCurrentUser })(withRouter(SignIn));\r\n","\r\nimport SignIn from '../SignIn/Sign'\r\n\r\n\r\n\r\nlet indexRoutes = [\r\n\r\n  {\r\n    path: \"/\",\r\n    name: \"SignIn\",\r\n    component: SignIn,\r\n    exact: true,\r\n  },\r\n  // {\r\n  //   path: \"/*\",\r\n  //   name: \"SignIn\",\r\n  //   component: SignIn,\r\n  // },\r\n];\r\n\r\nexport default indexRoutes;\r\n","import { SET_CURRENT_USER } from './types'\r\n\r\n// user authentication\r\nexport function setCurrentUser(user){\r\n    console.log(user);\r\n    return {\r\n        type : SET_CURRENT_USER,\r\n        user\r\n    };\r\n}\r\n\r\nexport function SignOut(){\r\n    return {\r\n        type : 'USER_LOGOUT'\r\n    };\r\n}","export const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","/*  eslint-disable */\r\nimport React from \"react\";\r\nimport \"../asserts/sidebar.css\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { connect } from \"react-redux\";\r\nimport { SignOut } from \"../Redux/Action/authAction\";\r\n\r\nimport {\r\n    faUser,\r\n    faEnvelopeSquare,\r\n    faBars,\r\n    faTags,\r\n    faBarcode,\r\n    faClipboardCheck,\r\n    faGift,\r\n    faPlusSquare,\r\n    faTachometerAlt,\r\n    faComment,\r\n    faHome,\r\n    faUserSecret,\r\n    faUsers,\r\n    faSuitcase,\r\n    faSignOutAlt,\r\n    faIgloo,\r\n    faTimes,\r\n    faSitemap,\r\n    faPlus,\r\n    faSort,\r\n    faHourglassHalf,\r\n    faCheck,\r\n    faUserPlus,\r\n    faTruck,\r\n    faThList\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nclass AdminSidebar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            side_bar_toggle: false,\r\n            addSuplierState: false,\r\n        };\r\n    }\r\n\r\n    signoutuser = () => {\r\n\r\n        const role = this.props.auth.user.role;\r\n        const isadmin = (role && (role == 3 || role == 1 || role == 2 || role == 0)) ? true : false\r\n        this.props.SignOut && this.props.SignOut();\r\n        this.props.history.push(isadmin ? \"/\" : \"/\");\r\n    };\r\n\r\n    change_toggle = () => {\r\n        if (this.state.addSuplierState) {\r\n            this.setState({ addSuplierState: false })\r\n        } else {\r\n            this.setState({ addSuplierState: true })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { side_bar_toggle } = this.state;\r\n        // const { active } = 'dashboard';\r\n        const { active } = this.props;\r\n        const role = this.props.auth.user.role;\r\n        var role_name = \"\";\r\n        if (role == 1)\r\n            role_name = \"Site Manager\"\r\n        else if (role == 2)\r\n            role_name = \"Accountant\"\r\n        else if (role == 3)\r\n            role_name = \"Management\"\r\n        else if (role == 0)\r\n            role_name = \"supplier\"\r\n        console.log(\"Users role\", role);\r\n\r\n\r\n        return (\r\n            <>\r\n                <nav className=\"navbar navbar-dark bg-dark py-0 shadow-sm  fixed-top\">\r\n                    <span className=\"navbar-brand mb-0 h6 text-light ml-2\">Dashboard\r\n                         <FontAwesomeIcon onClick={() => this.setState({ side_bar_toggle: !this.state.side_bar_toggle })} icon={faBars} className=\"ml-4 click show-icon\"></FontAwesomeIcon> </span>\r\n                </nav>\r\n                <div className={`sidebar_wrap sidebar-top ${side_bar_toggle ? 'sidebar_active' : ''}`}>\r\n                    <div className=\"sidebar-header pb-4 pt-2\">\r\n                        <div className=\"d-flex px-4\">\r\n                            <img src=\"https://www.iconfinder.com/data/icons/user-pictures/100/male3-512.png\" className=\"rounded-circle sidebar-image my-auto\"></img>\r\n                            <div className=\"my-auto\">\r\n                                <h6 style={{ lineHeight: '12px', fontWeight: 600 }}\r\n                                    className={`text-white mb-0 mt-1`}>\r\n                                    {role_name}\r\n                                </h6>\r\n                                <span className=\"small text-light \">\r\n                                    {this.props.auth.user.email}\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <ul className=\"sidebar\">\r\n                        {role == 2 || role == 3 ?\r\n                            <li className=\"listitem\" className={`listitem ${active == 'dashboard' && 'active_category'}`}>\r\n                                <Link to=\"/admin/dashboard\">\r\n                                    <h6 className={`dd categorylink px-2 ${active == 'dashboard' && 'active_category'}`}>\r\n                                        <FontAwesomeIcon icon={faTachometerAlt} className=\"mx-3 sidebar-icon\"></FontAwesomeIcon>Dashboard\r\n                             </h6></Link>\r\n                            </li>\r\n\r\n                            : ''}\r\n                        <Link to=\"/admin/pending\">\r\n                            <li className={`listitem ${active == 'Pending' && 'active_category'}`}>\r\n                                <h6 className={`dd categorylink px-2 ${active == 'Pending' && 'active_category'}`}>\r\n                                    <FontAwesomeIcon icon={faHourglassHalf} className=\"mx-3 sidebar-icon\"></FontAwesomeIcon>Pending Orders\r\n                                </h6>\r\n                            </li>\r\n                        </Link>\r\n                        <Link to=\"/admin/completed\">\r\n                            <li className={`listitem ${active == 'Completed' && 'active_category'}`}>\r\n                                <h6 className={`dd categorylink px-2 ${active == 'Completed' && 'active_category'}`}>\r\n                                    <FontAwesomeIcon icon={faCheck} className=\"mx-3 sidebar-icon\"></FontAwesomeIcon>Comp. Orders\r\n                                </h6>\r\n                            </li>\r\n                        </Link>\r\n                        {role == 2 || role == 3 ?\r\n                            <li className=\"listitem\" className={`listitem ${active == 'sitemanagers' && 'active_category'}`}>\r\n                                <Link to=\"/admin/sitemanagers\">\r\n                                    <h6 className={`dd categorylink px-2 ${active == 'sitemanagers' && 'active_category'}`}>\r\n                                        <FontAwesomeIcon icon={faUser} className=\"mx-3 sidebar-icon\"></FontAwesomeIcon>User Details\r\n                                </h6></Link>\r\n                            </li>\r\n                            : ''}\r\n                        {role == 3 &&\r\n                            <Link to=\"/admin/createUser\">\r\n                                <li className={`listitem ${active == 'CreateUser' && 'active_category'}`}>\r\n                                    <h6 className={`dd categorylink px-2 ${active == 'CreateUser' && 'active_category'}`}>\r\n                                        <FontAwesomeIcon icon={faUserPlus} className=\"mx-3 sidebar-icon\"></FontAwesomeIcon>Create Users\r\n                                </h6>\r\n                                </li>\r\n                            </Link>\r\n                        }\r\n                        {role == 2 || role == 3 ?\r\n                            <Link to=\"/admin/suppliers\">\r\n                                <li className={`listitem ${active == 'suppliers' && 'active_category'}`}>\r\n                                    <h6 className={`dd categorylink px-2 ${active == 'suppliers' && 'active_category'}`}>\r\n                                        <FontAwesomeIcon icon={faTruck} className=\"mx-3 sidebar-icon\"></FontAwesomeIcon>Suppliers\r\n                                </h6>\r\n                                </li>\r\n                            </Link>\r\n                            : ''}\r\n                        {role == 2 || role == 3 ?\r\n                            <Link to=\"/admin/sites\">\r\n                                <li className={`listitem ${active == 'sites' && 'active_category'}`}>\r\n                                    <h6 className={`dd categorylink px-2 ${active == 'sites' && 'active_category'}`}>\r\n                                        <FontAwesomeIcon icon={faSuitcase} className=\"mx-3 sidebar-icon\"></FontAwesomeIcon>Site Details\r\n                                </h6>\r\n                                </li>\r\n                            </Link>\r\n                            : ''}\r\n                        {role == 2 || role == 3 ?\r\n                            <Link to=\"/admin/items\">\r\n                                <li className={`listitem ${active == 'items' && 'active_category'}`}>\r\n                                    <h6 className={`dd categorylink px-2 ${active == 'items' && 'active_category'}`}>\r\n                                        <FontAwesomeIcon icon={faThList} className=\"mx-3 sidebar-icon\"></FontAwesomeIcon>Item Details\r\n                                </h6>\r\n                                </li>\r\n                            </Link>\r\n                            : ''}\r\n                        {role == 2 || role == 3 ?\r\n                            <Link to=\"/admin/AddItem\">\r\n                                <li className={`listitem ${active == 'Additems' && 'active_category'}`}>\r\n                                    <h6 className={`dd categorylink px-2 ${active == 'Additems' && 'active_category'}`}>\r\n                                        <FontAwesomeIcon icon={faBarcode} className=\"mx-3 sidebar-icon\"></FontAwesomeIcon>Add Items\r\n                                </h6>\r\n                                </li>\r\n                            </Link>\r\n                            : ''}\r\n                        <li onClick={() => this.signoutuser()} className={`listitem click`}>\r\n                            <h6 className={`dd categorylink px-2 `} style={{fontSize : '98%'}}>\r\n                                <FontAwesomeIcon icon={faSignOutAlt} className=\"mx-3 sidebar-icon\"></FontAwesomeIcon>Logout\r\n                             </h6>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth || {},\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    SignOut,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AdminSidebar));\r\n","import Config from './Config.controller'\r\nimport Axios from 'axios'\r\nclass Admin {\r\n    constructor() {\r\n        this.api = {\r\n\r\n            register_site_manager: \"/api/users/register\",\r\n            register_suppliers: \"/api/suppliers/add\",\r\n            get_all_site_managers_api: \"/api/users/sitemanagers\",\r\n            get_all_site_users_api: \"/api/users/all\",\r\n            get_all_supliers_api: \"/api/suppliers/get\",\r\n            get_all_orders: \"/api/orders/get_all\",\r\n            get_single_order: \"/api/orders/get_one/\",\r\n            add_site: \"/api/sites/create\",\r\n            update_state: \"/api/orders/update_state\",\r\n            all_sites: \"/api/sites/get_all\",\r\n            all_stats: \"/api/stats/all\",\r\n            by_month: \"/api/stats/latest\",\r\n            get_order_by_site_id : \"/api/orders/getbysite\",\r\n            get_single_site : \"/api/sites/getone\",\r\n            recent: \"/api/stats/recent\",\r\n        };\r\n    }\r\n    // sign in\r\n    register_site_manager = (data) => {\r\n        var requestData = {\r\n            data\r\n        }\r\n        console.log(requestData);\r\n        return new Promise((resolve, reject) => {\r\n            return Axios.post(`${Config.host}${Config.port}${this.api.register_site_manager}`, requestData)\r\n                .then(result => {\r\n                    if (result.code == 200) {\r\n                        resolve({ code: 200, data: result.data })\r\n                    } else {\r\n                        resolve([])\r\n                    }\r\n                })\r\n                .catch(err => {\r\n\r\n                    reject({ code: err.response.status, error: err })\r\n                })\r\n        })\r\n    }\r\n    register_suppliers = (data) => {\r\n\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                const result = await Axios.post(`${Config.host}${Config.port}${this.api.register_suppliers}`, data);\r\n                resolve({ code: 200, data: result.data });\r\n            } catch (err) {\r\n                reject({ code: 0, error: err });\r\n            }\r\n        })\r\n    }\r\n    get_all_site_managers = () => {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                const result = await Axios.get(`${Config.host}${Config.port}${this.api.get_all_site_managers_api}`);\r\n                resolve({ code: 200, data: result.data });\r\n            } catch (err) {\r\n                reject({ code: 0, error: err });\r\n            }\r\n        })\r\n    }\r\n    get_all_suppliers = () => {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                const result = await Axios.get(`${Config.host}${Config.port}${this.api.get_all_supliers_api}`);\r\n                resolve({ code: 200, data: result.data });\r\n            } catch (err) {\r\n                reject({ code: 0, error: err });\r\n            }\r\n        })\r\n    }\r\n    get_all_site_users_details = () => {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                const result = await Axios.get(`${Config.host}${Config.port}${this.api.get_all_site_users_api}`);\r\n                resolve({ code: 200, data: result.data });\r\n            } catch (err) {\r\n                reject({ code: 0, error: err });\r\n            }\r\n        })\r\n    }\r\n    get_all_orders = () => {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                const result = await Axios.get(`${Config.host}${Config.port}${this.api.get_all_orders}`);\r\n                resolve({ code: 200, data: result.data });\r\n            } catch (err) {\r\n                reject({ code: 0, error: err });\r\n            }\r\n        })\r\n    }\r\n    get_single_order = (id) => {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                const result = await Axios.get(`${Config.host}${Config.port}${this.api.get_single_order}${id}`,);\r\n                resolve({ code: 200, data: result.data });\r\n            } catch (err) {\r\n                reject({ code: 0, error: err });\r\n            }\r\n        })\r\n    }\r\n    get_all_sites = () => {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                const result = await Axios.get(`${Config.host}${Config.port}${this.api.all_sites}`);\r\n                resolve({ code: 200, data: result.data });\r\n            } catch (err) {\r\n                reject({ code: 0, error: err });\r\n            }\r\n        })\r\n    }\r\n    get_all_stats = () => {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                const result = await Axios.get(`${Config.host}${Config.port}${this.api.all_stats}`);\r\n                resolve({ code: 200, data: result.data });\r\n            } catch (err) {\r\n                reject({ code: 0, error: err });\r\n            }\r\n        })\r\n    }\r\n    get_recent_details = () => {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                const result = await Axios.get(`${Config.host}${Config.port}${this.api.recent} `);\r\n                resolve({ code: 200, data: result.data });\r\n            } catch (err) {\r\n                reject({ code: 0, error: err });\r\n            }\r\n        })\r\n    }\r\n    get_all_stats_by_months = () => {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                const result = await Axios.get(`${Config.host}${Config.port}${this.api.by_month} `);\r\n                resolve({ code: 200, data: result.data });\r\n            } catch (err) {\r\n                reject({ code: 0, error: err });\r\n            }\r\n        })\r\n    }\r\n    get_order_by_site_id = (id) => {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                const result = await Axios.get(`${Config.host}${Config.port}${this.api.get_order_by_site_id}/${id}`);\r\n                resolve({ code: 200, data: result.data });\r\n            } catch (err) {\r\n                reject({ code: 0, error: err });\r\n            }\r\n        })\r\n    }\r\n    get_single_site = (id) => {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                const result = await Axios.get(`${Config.host}${Config.port}${this.api.get_single_site}/${id}`);\r\n                resolve({ code: 200, data: result.data });\r\n            } catch (err) {\r\n                reject({ code: 0, error: err });\r\n            }\r\n        })\r\n    }\r\n    add_site = (data) => {\r\n        var requestData = {\r\n            data\r\n        }\r\n        console.log(data);\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                const result = await Axios.post(`${Config.host}${Config.port}${this.api.add_site}`, requestData);\r\n                resolve({ code: 200, data: result.data });\r\n            } catch (err) {\r\n                reject({ code: 0, error: err });\r\n            }\r\n        })\r\n    }\r\n\r\n    update_state = (data) => {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                const result = await Axios.patch(`${Config.host}${Config.port}${this.api.update_state}`, data);\r\n                resolve({ code: 200, data: result.data });\r\n            } catch (err) {\r\n                reject({ code: 0, error: err });\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nvar obj = new Admin();\r\nexport default obj;\r\n","import React, { Component } from 'react';\r\nexport const gettotal = (items = []) => {\r\n        return items.reduce( (acc,current) => {\r\n          if(current.item && current.item.price && current.quantity){\r\n              return acc + (current.item.price * current.quantity)\r\n          }else{\r\n            return acc\r\n          }\r\n        },0)\r\n      }\r\n\r\nexport const render_state = (status) => {\r\n        switch(parseInt(status.state)){\r\n            case 0 : return  <span className=\"mr-1 small rounded bg-danger px-2 text-white \">{status.comment}</span>\r\n            case 1 : return  <span className=\"mr-1 small rounded bg-info px-2 text-white \">{status.comment}</span>\r\n            case 2 : return  <span className=\"mr-1 small rounded state2 px-2 text-white\">{status.comment}</span> \r\n            case 3 : return  <span className=\"mr-1 small rounded state3 px-2 text-white\">{status.comment}</span> \r\n            case 4 : return  <span className=\"mr-1 small rounded state4 px-2 text-white\">{status.comment}</span>\r\n            case 5 : return  <span className=\"mr-1 small rounded bg-success px-2 text-white\">{status.comment}</span>\r\n          }\r\n    }\r\n\r\nexport const current_state = (status) => {\r\n        switch(parseInt(status)){\r\n            case 0 : return 'Rejected' \r\n            case 1 : return 'Order Placed' \r\n            case 2 : return  'Accountant Approved'\r\n            case 3 : return  'Management Approved'\r\n            case 4 : return  'Supplier Approved'\r\n            case 5 : return  'Delivered'\r\n          }\r\n    }\r\n\r\nexport const state_color = (status) => {\r\n        switch(parseInt(status)){\r\n            case 0 : return \"xx00\"  \r\n            case 1 : return \"xx01\" \r\n            case 2 : return \"xx02\"  \r\n            case 3 : return \"xx03\"  \r\n            case 4 : return \"xx04\"  \r\n            case 5 : return \"xx05\"  \r\n          }\r\n    }","/*  eslint-disable */\r\nimport React, { Component } from 'react';\r\nimport SideBar from '../Common/Sidebar'\r\nimport { Line as LineChart, Bar, Doughnut } from 'react-chartjs-2';\r\nimport moment from 'moment'\r\nimport { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faPenAlt, faEye, faEnvelope, faBan } from '@fortawesome/free-solid-svg-icons'\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from 'react-router-dom'\r\nimport img_sites from '../asserts/img/build.png'\r\nimport img_pending from '../asserts/img/pen.png'\r\nimport img_delivery from '../asserts/img/delivery.png'\r\nimport img_construction from '../asserts/img/construction.png'\r\nimport Config from '../Controller/Config.controller'\r\nimport AdminController from '../Controller/Admin.controller'\r\nimport { gettotal, render_state, current_state, state_color } from '../Controller/Util.controller'\r\nclass Dashboard extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            counts: null,\r\n            loading: true,\r\n            monthwise: null,\r\n            orders: [],\r\n            main_loading : true ,\r\n            dates: [],\r\n            no_of_orders: []\r\n        };\r\n    }\r\n    componentDidMount = async () => {\r\n        await AdminController.get_all_stats().then(response => {\r\n            this.setState({\r\n                counts: response.data.data,\r\n                loading: false\r\n            })\r\n        })\r\n        this.get_data_filteration()\r\n    }\r\n    get_data_filteration = () => {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        \r\n        AdminController.get_all_orders()\r\n            .then(result => {\r\n                this.setState({\r\n                    loading: false,\r\n                    orders: result.data.data\r\n                })\r\n            })\r\n            .catch(err => {\r\n                this.setState({ loading: false })\r\n            })\r\n        AdminController.get_recent_details().then(response => {\r\n            var m_today = moment( new Date() ).format(\"YYYY-MM-DD\");\r\n            var today = new Date(m_today ); \r\n            var prev =  new Date(moment(m_today, \"YYYY-MM-DD\").subtract(7 ,'days').format(\"YYYY-MM-DD\") );\r\n            var orders = response.data.data;\r\n            let dataset = [];\r\n\r\n            for(var arr=[],dt= prev ; dt<= today; dt.setDate(dt.getDate()+1)){ \r\n            \r\n                let c = new Date(dt);\r\n                let numberoforders = 0;\r\n                let find = orders.findIndex( item => item.date === moment(c).format('YYYY-MM-DD'))\r\n                if(find >= 0 ){\r\n                    numberoforders = orders[find].numberoforders;\r\n                }\r\n    \r\n                dataset.push({\r\n                   date : moment(c).format('MMM-DD'),\r\n                   numberoforders : numberoforders   \r\n                })\r\n    \r\n              }\r\n            \r\n            this.setState({\r\n                loading: false,\r\n                dates: dataset.map(function (val) {\r\n                    return val.date;\r\n                }),\r\n                no_of_orders: dataset.map(function (val) {\r\n                    return val.numberoforders;\r\n                }),\r\n            })\r\n        }).catch(err => {\r\n            this.setState({ loading: false })\r\n        })\r\n\r\n        this.setState({main_loading : false})\r\n    }\r\n    render() {\r\n        const { counts, orders, loading ,main_loading} = this.state\r\n        return (\r\n\r\n            <div className=\"bg-light wd-wrapper\">\r\n                <SideBar active={\"dashboard\"} />\r\n                \r\n                    <div className=\"wrapper-wx\" >\r\n                        <div className=\"container-fluid\" >\r\n                            <div className=\"row mx-1\">\r\n                                <div className=\"col-12 px-0\">\r\n                                    <h6 className=\"text-dark bold-normal py-3 bg-white shadow-sm px-3 mt-3 rounded\">\r\n                                    System Overview\r\n                                    </h6>\r\n                                </div>\r\n                                { main_loading && \r\n                                <div className=\"col-12 px-0\">\r\n                                    <h6 className=\"text-dark bold-normal py-2 bg-white shadow-sm px-3 mt-2 rounded text-center\">\r\n                                        Loading...\r\n                                    </h6>\r\n                                </div>\r\n                                }\r\n                                { !main_loading && \r\n                                <>\r\n                                <div className={`col-lg-2 col-md-3 col-sm-4 col-6 pl-0 pr-2`} >\r\n                                    <div className={cardstyle}>\r\n                                        <div className=\"pl-3 pr-0 my-auto\">\r\n                                            <img src=\"http://fashi.lucidex.tech/images/default/admin.Users.png\" className=\"sidebar-image\"></img>\r\n                                        </div>\r\n                                        <div className=\"my-auto\">\r\n                                            <h6 className=\"mb-0 text-secondary bold-normal pr-2\">Users </h6>\r\n                                            <h3 className=\"mb-0 text-dark bold-normal pr-2\">{(\"0\" + (counts.user_count)).slice(-2)}</h3>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={`col-lg-2 col-md-3 col-sm-4 col-6 pl-0 pr-2`} >\r\n                                    <div className={cardstyle}>\r\n                                        <div className=\"pl-3 pr-0 my-auto\">\r\n                                            <img src=\"http://fashi.lucidex.tech/images/default/admin.Managers.png\" className=\"sidebar-image\"></img>\r\n                                        </div>\r\n                                        <div className=\"my-auto\">\r\n                                            <h6 className=\"mb-0 text-secondary bold-normal pr-2\">Suppliers </h6>\r\n                                            <h3 className=\"mb-0 text-dark bold-normal pr-2\">{(\"0\" + (counts.supplier_count)).slice(-2)}</h3>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={`col-lg-2 col-md-3 col-sm-4 col-6 pl-0 pr-2`} >\r\n                                    <div className={cardstyle}>\r\n                                        <div className=\"pl-3 pr-0 my-auto\">\r\n                                            <img src={img_pending} className=\"sidebar-image\"></img>\r\n                                        </div>\r\n                                        <div className=\"my-auto\">\r\n                                            <h6 className=\"mb-0 text-secondary bold-normal pr-2\">Pending</h6>\r\n                                            <h3 className=\"mb-0 text-dark bold-normal pr-2\">{(\"0\" + (counts.pending_orders)).slice(-2)}</h3>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={`col-lg-2 col-md-3 col-sm-4 col-6 pl-0 pr-2`} >\r\n                                    <div className={cardstyle}>\r\n                                        <div className=\"pl-3 pr-0 my-auto\">\r\n                                            <img src={img_delivery} className=\"sidebar-image\"></img>\r\n                                        </div>\r\n                                        <div className=\"my-auto\">\r\n                                            <h6 className=\"mb-0 text-secondary bold-normal pr-2\">Completed</h6>\r\n                                            <h3 className=\"mb-0 text-dark bold-normal pr-2\">{(\"0\" + (counts.completed_orders)).slice(-2)}</h3>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={`col-lg-2 col-md-3 col-sm-4 col-6 pl-0 pr-2`} >\r\n                                    <div className={cardstyle}>\r\n                                        <div className=\"pl-3 pr-0 my-auto\">\r\n                                            <img src={img_sites} className=\"sidebar-image\"></img>\r\n                                        </div>\r\n                                        <div className=\"my-auto\">\r\n                                            <h6 className=\"mb-0 text-secondary bold-normal pr-2\">Sites</h6>\r\n                                            <h3 className=\"mb-0 text-dark bold-normal pr-2\">{(\"0\" + (counts.site_count)).slice(-2)}</h3>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={`col-lg-2 col-md-3 col-sm-4 col-6 pl-0 pr-0`} >\r\n                                    <div className={cardstyle}>\r\n                                        <div className=\"pl-3 pr-0 my-auto\">\r\n                                            <img src={img_construction} className=\"sidebar-image\"></img>\r\n                                        </div>\r\n                                        <div className=\"my-auto\">\r\n                                            <h6 className=\"mb-0 text-secondary bold-normal pr-2\"> Items</h6>\r\n                                            <h3 className=\"mb-0 text-dark bold-normal pr-2\">{(\"0\" + (counts.item_count)).slice(-2)}</h3>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-8 px-0 mb-2\" >\r\n                                    <div className=\"card border-0 shadow-sm rounded mt-3 bg-white pt-2 pb-0 mr-2 h-100\">\r\n                                     <h6 className=\"text-dark bold-normal px-3 py-1 \">Orders Count<span className=\"badge badge-primary ml-2\">Last 7 Days</span></h6>\r\n                                         <div className=\"px-3 pt-2 pb-0\" >\r\n                                        <LineChart data={{\r\n                                            labels: this.state.dates,\r\n                                            datasets: [\r\n                                                {\r\n                                                    label: \"Revenue\",\r\n                                                    backgroundColor: '#3498db80',\r\n                                                    borderColor: '#3498dbBF',\r\n                                                    data: this.state.no_of_orders\r\n                                                }\r\n                                            ]\r\n                                        }}\r\n                                            options={options1} width={8} height={3.5} />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-4 px-0 mb-2\" >\r\n                                    <div className=\"card border-0 shadow-sm rounded mt-3 bg-white pt-2 pb-0 px-2 ml-2 h-100\">\r\n                                        <div className=\"campaign ct-charts px-3\">\r\n                                        <h6 className=\"text-dark bold-normal py-1 \">Order Status </h6>\r\n                                            <div className=\"p-0\" >\r\n                                            <Doughnut\r\n                                                 options={{ legend: {position : 'bottom'}}}\r\n                                                data={{\r\n                                                labels: [\r\n                                                    'Rejected',\r\n                                                    'Placed',\r\n                                                    'A.Approved',\r\n                                                    'M.Approved',\r\n                                                    'S.Approved',\r\n                                                    'Delivered',\r\n                                                ],\r\n                                                datasets: [\r\n                                                    {\r\n                                                        label: \"Orders\",\r\n                                                        backgroundColor: [\r\n                                                            '#3498db',\r\n                                                            '#3780b6',\r\n                                                            '#3772a1',\r\n                                                            '#356085',\r\n                                                            '#314f6a',\r\n                                                            '#2c3e50',\r\n\r\n                                                        ],\r\n                                                        data: this.countbytype(orders)\r\n                                                    }\r\n                                                ]\r\n                                            }}\r\n                                               height=\"6\" width=\"7\" />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12 px-0 mt-2\" >\r\n                                    <div className=\"card border-0 shadow-sm rounded mt-3 bg-white pt-2 pb-3\">\r\n                                        {/* <h6 className=\"text-muted bold-normal px-2 mb-0\">  2020  </h6> */}\r\n                                        <h6 className=\"text-dark bold-normal px-3 py-1 \">  Recent Orders </h6>\r\n                                        <div className=\"table-responsive px-2\">\r\n                                            <table className=\"table table-stripped\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th scope=\"col\"><h6 className=\"header\">Delivery Date</h6></th>\r\n                                                        <th scope=\"col\"><h6 className=\"header\">No.Items</h6></th>\r\n                                                        <th scope=\"col\"><h6 className=\"header\">Total</h6></th>\r\n                                                        <th scope=\"col\"><h6 className=\"header\">Current State</h6></th>\r\n                                                        <th scope=\"col\"><h6 className=\"header\">Actions</h6></th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {orders && orders\r\n                                                        .sort((a, b) => parseInt(a.current_state) - parseInt(b.current_state))\r\n                                                        .map((item, i) => this.display(item, i)).splice(0, 5)\r\n                                                    }\r\n\r\n                                                    {loading &&\r\n                                                        <td colSpan={5}><h6 className=\"text-dark normal text-center py-2\">Loading...</h6></td>\r\n                                                    }\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> \r\n                                </> }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                   \r\n            </div>\r\n        );\r\n    }\r\n\r\n    display = (row, i) => {\r\n        return (\r\n            <tr key={row._id}>\r\n                <td><h6 className=\"text-dark normal\">{moment(row.date).format('LL')}</h6></td>\r\n                <td><h6 className=\"text-dark normal\">{(\"0\" + (row.items.length)).slice(-2)}</h6></td>\r\n                <td><h6 className=\"text-dark normal\">{`LKR ${Config.numberWithCommas(gettotal(row.items))}.00`}</h6></td>\r\n                <td><span className={`mr small rounded py-1 px-2 ${state_color(row.current_state)}`}>\r\n                    {current_state(row.current_state)}\r\n                </span>\r\n                </td>\r\n                <td>\r\n                    <Link to={`/admin/orders/${row._id}`}>\r\n                        <span className=\" rounded py-1 px-2 bg-success text-white\">\r\n                            <FontAwesomeIcon icon={faEye} className=\"mr-1\" /> Details\r\n                    </span>\r\n                    </Link>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n    getStyle = (item) => {\r\n        return {\r\n            backgroundColor: item.deleteRequest ? \"#ffa1a150\" : \"#FFFFFF\",\r\n        };\r\n    };\r\n    setGreeting = () => {\r\n        let h = new Date().getHours()\r\n        if (h >= 5 && h <= 11) {\r\n            return \"Good Morning! \"\r\n        } else if (h >= 12 && h <= 17) {\r\n            return \"Good Afternoon! \"\r\n        } else if (h >= 18 && h <= 20) {\r\n            return \"Good Evening! \"\r\n        } else {\r\n            return \"Good Night! \"\r\n        }\r\n    }\r\n\r\n    countbytype = (orders = []) => {\r\n        let data = [0,0,0,0,0,0]\r\n        orders.forEach( row => {\r\n            if(row.current_state <= 5 && row.current_state >= 0){\r\n                data[row.current_state] = data[row.current_state] + 1\r\n            }\r\n        })\r\n        console.log(data)\r\n        return data;\r\n    }\r\n}\r\nconst cardstyle = \"card border-0 shadow-sm rounded mt-2 bg-white py-2 d-flex flex-row\"\r\nconst options1 = {\r\n    scaleShowGridLines: false,\r\n    scaleGridLineColor: 'rgba(0,0,0,.05)',\r\n    scaleGridLineWidth: 0,\r\n    scaleShowHorizontalLines: true,\r\n    scaleShowVerticalLines: true,\r\n    bezierCurve: true,\r\n    bezierCurveTension: 0.4,\r\n    pointDot: true,\r\n    pointDotRadius: 4,\r\n    pointDotStrokeWidth: 1,\r\n    pointHitDetectionRadius: 20,\r\n    datasetStroke: true,\r\n    datasetStrokeWidth: 2,\r\n    datasetFill: true,\r\n    legend: {\r\n        display: false\r\n    },\r\n    scales: {\r\n        xAxes: [{\r\n            gridLines: {\r\n                display: false\r\n            }\r\n        }],\r\n        yAxes: [{\r\n            gridLines: {\r\n                display: false\r\n            },\r\n            ticks: {\r\n                beginAtZero: true,\r\n                precision: 0,\r\n            }\r\n        }]\r\n    }\r\n}\r\nconst defaultcounts = [{ name: \"Users\", value: 0 },\r\n{ name: \"Managers\", value: 0 },\r\n{ name: \"Products\", value: 0 },\r\n{ name: \"Categories\", value: 0 },\r\n{ name: \"Orders\", value: 0 },\r\n{ name: \"Offers\", value: 0 },]\r\n\r\nconst options2 = {\r\n    fill: false,\r\n    lineTension: 0.1,\r\n    backgroundColor: 'rgba(75,192,192,0.4)',\r\n    borderColor: 'rgba(75,192,192,1)',\r\n    borderCapStyle: 'butt',\r\n    borderDash: [],\r\n    borderDashOffset: 0.0,\r\n    borderJoinStyle: 'miter',\r\n    pointBorderColor: 'rgba(75,192,192,1)',\r\n    pointBackgroundColor: '#fff',\r\n    pointBorderWidth: 1,\r\n    pointHoverRadius: 5,\r\n    pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n    pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n    pointHoverBorderWidth: 2,\r\n    pointRadius: 1,\r\n    pointHitRadius: 10,\r\n    legend: {\r\n        display: false\r\n    },\r\n    scales: {\r\n        xAxes: [{\r\n            gridLines: {\r\n                display: false\r\n            }\r\n        }],\r\n        yAxes: [{\r\n            gridLines: {\r\n                display: false\r\n            }\r\n        }]\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth || {},\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(withRouter(Dashboard));","      /*  eslint-disable */\r\nimport React, { Component } from \"react\";\r\nimport \"../asserts/loading.css\";\r\n\r\n// spinner\r\nimport Spinner from \"../asserts/loading2.svg\";\r\n\r\nclass Loader extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n   return <></>\r\n  }\r\n}\r\n\r\nexport default Loader;\r\n","      /*  eslint-disable */\r\nimport React, { Component } from 'react';\r\nimport SideBar from '../../Common/Sidebar'\r\nimport Config from '../../Controller/Config.controller'\r\nimport ADMIN from '../../Controller/Admin.controller'\r\nimport moment from 'moment'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faPenAlt, faEye, faEnvelope, faBan } from '@fortawesome/free-solid-svg-icons'\r\nimport { withRouter } from 'react-router-dom'\r\nimport Loader from '../Loading'\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nclass SiteManagersAdmin extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            addManagerState: false,\r\n            name: '',\r\n            contactNumber: '',\r\n            email: '',\r\n            site_location: '',\r\n            site_code: '',\r\n            password: Config.password,\r\n            site_managers_arry: [],\r\n            loading: true,\r\n            viewUser: '',\r\n            showUserModal: false,\r\n        };\r\n        this.get_all_site_managers()\r\n    }\r\n    formValueChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    change_toggle = () => {\r\n        if (this.state.addManagerState) {\r\n            this.setState({ addManagerState: false })\r\n        } else {\r\n            this.setState({ addManagerState: true })\r\n        }\r\n    }\r\n\r\n\r\n    get_all_site_managers = async () => {\r\n        const res = await ADMIN.get_all_site_users_details()\r\n        console.log(res.data.data);\r\n        this.setState({\r\n            site_managers_arry: res.data.data.filter( i => i.role != 0)\r\n        })\r\n        await this.setState({\r\n            loading: false,\r\n        });\r\n    }\r\n    showViewUser(i) {\r\n        var singleUser = this.state.site_managers_arry.filter(user => user._id == i);\r\n        this.setState({\r\n            showUserModal: true,\r\n            viewUser: singleUser[0]\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { name, contactNumber, email, site_code, site_location, viewUser } = this.state\r\n       \r\n        return (\r\n            <div className=\"bg-light wd-wrapper\">\r\n                <SideBar active={\"sitemanagers\"} />\r\n\r\n                <div className=\"wrapper-wx\" >\r\n                    <div className=\"container-fluid\" >\r\n                        <Loader show={this.state.loading} />\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h6 className=\"text-dark bold-normal py-3 bg-white shadow-sm px-3 mt-3 rounded\">\r\n                                    Users Managment\r\n                                </h6>\r\n                            </div>\r\n\r\n                            {/* ----------------------------------------------------------- */}\r\n                            <div className=\"col-12 iser_i\">\r\n                                <div className=\"card border-0 shadow-sm rounded mt-2 bg-white pb-2\">\r\n                                 \r\n                                    <div className=\"table-responsive px-3\">\r\n                                        <table className=\"table table-stripped\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Name</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Email</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Contact No</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Designation</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Access Level</h6></th>\r\n                                                    {/* <th scope=\"col\">Actions</th> */}\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {this.state.site_managers_arry && \r\n                                                this.state.site_managers_arry.map(item => this.display_all_site_managers(item))}\r\n\r\n                                                { this.state.loading && \r\n                                                    <td colSpan={5}><h6 className=\"text-dark normal text-center py-2\">Loading...</h6></td>\r\n                                                }\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {/* ---------------------------------------------------- */}\r\n                            <Modal\r\n                                size=\"md\"\r\n                                show={this.state.showUserModal}\r\n                                centered\r\n                                onHide={() => this.setState({ showUserModal: false })}\r\n                            >\r\n                                <Modal.Header closeButton>\r\n                                    <Modal.Title>Manager Details</Modal.Title>\r\n                                </Modal.Header>\r\n                                <Modal.Body>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-12\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-6\">\r\n                                                    <p><b>Name : </b> {viewUser.name}</p>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    <p><b>Contact Number  : </b> {viewUser.contact_number} </p>\r\n                                                </div>\r\n                                                <div className=\"col-md-6\">\r\n                                                    <p><b>Email : </b>   {viewUser.email}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-8\">\r\n                                                    <p><b>Site Location : </b>   {viewUser.site_location}</p>\r\n                                                </div>\r\n                                                <div className=\"col-md-4\">\r\n                                                    <p><b>Site Code : </b>   {viewUser.site_code}</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-md-12\">\r\n                                            <center>\r\n                                                <a className=\"btn btn-info btn-sm px-2 mr-2 mt-1\" href={`mailto:${viewUser.email}`} >\r\n                                                    <FontAwesomeIcon icon={faEnvelope} /> Send Email\r\n                                                  </a>\r\n                                            </center>\r\n                                        </div>\r\n                                    </div>\r\n                                </Modal.Body>\r\n                            </Modal>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    display_all_site_managers = data_arry => {\r\n        return (\r\n            <tr key={data_arry._id}>\r\n                <td><h6 className=\"text-dark normal\">{data_arry.username}</h6></td>\r\n                <td><h6 className=\"text-dark normal\">{data_arry.email}</h6></td>\r\n                <td><h6 className=\"text-dark normal\">{data_arry.contact_number}</h6></td>\r\n                <td><h6 className=\"text-dark normal\">{data_arry.designation}</h6></td>\r\n                <td><span className={`bg-${data_arry.role == 1 ? 'success' : 'info'} px-2 text-white rounded small`} >\r\n                    {data_arry.role == 1 ? 'Mobile' : 'Web'}</span> </td>\r\n               \r\n            </tr>\r\n        );\r\n    }\r\n\r\n    \r\n}\r\n\r\n\r\nexport default SiteManagersAdmin;","/*  eslint-disable */\r\nimport React, { Component } from 'react';\r\nimport SideBar from '../../Common/Sidebar'\r\nimport Config from '../../Controller/Config.controller'\r\nimport ADMIN from '../../Controller/Admin.controller'\r\nimport moment from 'moment'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faPenAlt, faEye, faEnvelope, faBan } from '@fortawesome/free-solid-svg-icons'\r\nimport { withRouter } from 'react-router-dom'\r\nimport Loader from '../Loading'\r\nimport Select from 'react-select';\r\n\r\nconst options = [\r\n    { value: 'Site Manager', label: 'Site Manager' },\r\n    { value: 'Accountant', label: 'Accountant ' },\r\n    { value: 'Management(Admin)', label: 'Management(Admin)' },\r\n];\r\n\r\nclass createUser extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            addManagerState: false,\r\n            name: '',\r\n            contactNumber: '',\r\n            email: '',\r\n            site_location: '',\r\n            site_code: '',\r\n            password: Config.password,\r\n            all_users: [],\r\n            loading: true,\r\n            viewUser: '',\r\n            showUserModal: false,\r\n            selectedOption: null,\r\n            designation: '',\r\n\r\n        };\r\n        this.get_all_site_managers()\r\n    }\r\n    formValueChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    handleChange = selectedOption => {\r\n        this.setState({ selectedOption });\r\n        console.log(`Option selected:`, selectedOption);\r\n    };\r\n\r\n    change_toggle = () => {\r\n        if (this.state.addManagerState) {\r\n            this.setState({ addManagerState: false })\r\n        } else {\r\n            this.setState({ addManagerState: true })\r\n        }\r\n    }\r\n\r\n    onSubmit = async (e) => {\r\n        e.preventDefault()\r\n        var role_number = 0;\r\n        if (this.state.selectedOption.value == \"Site Manager\")\r\n            role_number = 1\r\n        else if (this.state.selectedOption.value == \"Accountant\")\r\n            role_number = 2\r\n        else if (this.state.selectedOption.value == \"Management(Admin)\")\r\n            role_number = 3\r\n        console.log(this.state.selectedOption.value);\r\n        console.log(role_number);\r\n        var data = {\r\n            username: this.state.name,\r\n            contact_number: this.state.contactNumber,\r\n            email: this.state.email,\r\n            password: Config.password,\r\n            designation: this.state.selectedOption.value,\r\n            role: role_number\r\n        }\r\n        console.log(data);\r\n        ADMIN.register_site_manager(data).then(result => {\r\n            Config.setToast(\"Successfully Registed\")\r\n            this.get_all_site_managers()\r\n            this.clear()\r\n            this.setState({\r\n                addManagerState: false\r\n            })\r\n            this.props.history.push(\"/admin/sitemanagers\");\r\n        }).catch(err => {\r\n            console.log(err.code);\r\n            Config.setErrorToast(\"Someting went wrong\")\r\n            this.props.history.push(\"/admin/sitemanagers\");\r\n        })\r\n    }\r\n    clear = () => {\r\n        this.setState({\r\n            name: '',\r\n            contactNumber: '',\r\n            email: '',\r\n            site_code: '',\r\n            site_location: '',\r\n            password: Config.password,\r\n        })\r\n    }\r\n    get_all_site_managers = async () => {\r\n        const res = await ADMIN.get_all_site_users_details()\r\n        console.log(res);\r\n        this.setState({\r\n            all_users: res.data.data\r\n        })\r\n        await this.setState({\r\n            loading: false,\r\n        });\r\n    }\r\n    showViewUser(i) {\r\n        var singleUser = this.state.all_users.filter(user => user._id == i);\r\n        this.setState({\r\n            showUserModal: true,\r\n            viewUser: singleUser[0]\r\n        })\r\n    }\r\n    render() {\r\n        const { name, contactNumber, email, site_code, site_location, viewUser, selectedOption } = this.state\r\n        return (\r\n            <div className=\"bg-light wd-wrapper\">\r\n                <SideBar active={\"CreateUser\"} />\r\n                <div className=\"wrapper-wx\" >\r\n                    <div className=\"container-fluid\" >\r\n                        {/* <Loader show={this.state.loading} /> */}\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h6 className=\"text-dark bold-normal py-3 bg-white shadow-sm px-3 mt-3 rounded\">\r\n                                    Create New Users\r\n                                </h6>\r\n                            </div>\r\n                            <div className=\"col-12\" >\r\n                                <div className=\"card border-0 shadow-sm rounded mt-2 bg-white pb-2\">\r\n                                    <form className=\" py-2  px-3 createUsers\" onSubmit={(e) => this.onSubmit(e)}>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-6\">\r\n                                                <h6 className=\"form-label mb-2 mt-2\">Username *</h6>\r\n                                                <input\r\n                                                    id=\"user_name\"\r\n                                                    type=\"text\"\r\n                                                    name=\"name\"\r\n                                                    placeholder=\"Enter Username\"\r\n                                                    value={name}\r\n                                                    className=\"form-control\" onChange={(e) => this.formValueChange(e)} required></input>\r\n\r\n                                                <h6 className=\"form-label mb-2 mt-3\">Designation *</h6>\r\n                                                <Select name=\"designation\"\r\n                                                    id=\"user_designation\"\r\n                                                    placeholder={'Select Designation'}\r\n                                                    value={selectedOption}\r\n                                                    onChange={this.handleChange}\r\n                                                    options={options}\r\n                                                    required\r\n                                                />\r\n                                                <h6 className=\"form-label mb-2 mt-3\">Password  *</h6>\r\n                                                <input\r\n                                                    type=\"password\"\r\n                                                    name=\"password\"\r\n                                                    placeholder=\"Automaticaly Generate and Email\"\r\n                                                    className=\"form-control\" disabled></input>\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                <h6 className=\"form-label mb-2 mt-2\">Email Address *</h6>\r\n                                                <input\r\n                                                    id=\"user_email\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    placeholder=\"Enter Email Address\"\r\n                                                    value={email}\r\n                                                    className=\"form-control\" onChange={(e) => this.formValueChange(e)} required></input>\r\n\r\n                                                <h6 className=\"form-label mb-2 mt-3\">Contact No*</h6>\r\n                                                <input\r\n                                                    id=\"user_contact\"\r\n                                                    type=\"text\"\r\n                                                    name=\"contactNumber\"\r\n                                                    placeholder=\"Enter Phone No\"\r\n                                                    value={contactNumber}\r\n                                                    className=\"form-control\" onChange={(e) => this.formValueChange(e)} required></input>\r\n                                                <br></br>\r\n                                                <div className=\"d-flex mt-3\">\r\n                                                    <button type=\"submit\" className=\"font-weight-bold px-2 btn btn-dark  btn-sm bold-normal \"   >\r\n                                                        Create User\r\n                                                    </button>\r\n                                                    <button type=\"reset\" onClick={() => this.clear()} className=\"font-weight-bold px-2 ml-2  btn btn-secondary  btn-sm bold-normal\" >\r\n                                                        Cancel\r\n                                                    </button>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                {/* <h6 className=\"form-label py-2 \">Site Location *</h6> */}\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    name=\"site_location\"\r\n                                                    placeholder=\"Galle - Main Street\"\r\n                                                    value={site_location}\r\n                                                    className=\"form-control\" onChange={(e) => this.formValueChange(e)} hidden></input>\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                {/* <h6 className=\"form-label py-2 \">Site Code *</h6> */}\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    name=\"site_code\"\r\n                                                    placeholder=\"GL0156\"\r\n                                                    value={site_code}\r\n                                                    className=\"form-control\" onChange={(e) => this.formValueChange(e)} hidden></input>\r\n                                            </div>\r\n                                            <div className=\"col-md-12 mt-4\">\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nexport default withRouter(createUser);","/*  eslint-disable */\r\nimport React, { Component } from 'react';\r\nimport SideBar from '../../Common/Sidebar'\r\nimport Config from '../../Controller/Config.controller'\r\nimport ADMIN from '../../Controller/Admin.controller'\r\nimport moment from 'moment'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faPenAlt, faEye, faEnvelope, faBan } from '@fortawesome/free-solid-svg-icons'\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nclass SupliersAdmin extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            loading: true,\r\n            addSuplierState: false,\r\n            name: '',\r\n            contactNumber: '',\r\n            email: '',\r\n            password: Config.password,\r\n            address: '',\r\n            suppliers_arry: [],\r\n\r\n        };\r\n        this.get_all_suppliers_func()\r\n    }\r\n    formValueChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n    get_all_suppliers_func = async () => {\r\n        const res = await ADMIN.get_all_suppliers()\r\n        console.log(res);\r\n        this.setState({\r\n            suppliers_arry: res.data.data,\r\n            loading: false\r\n        })\r\n\r\n    }\r\n    change_toggle = () => {\r\n        if (this.state.addSuplierState) {\r\n            this.setState({ addSuplierState: false })\r\n        } else {\r\n            this.setState({ addSuplierState: true })\r\n        }\r\n    }\r\n    onSubmit = async (e) => {\r\n        e.preventDefault()\r\n        var data = {\r\n            name: this.state.name,\r\n            phoneNo: this.state.contactNumber,\r\n            email: this.state.email,\r\n            password: Config.password,\r\n            address: this.state.address\r\n        }\r\n        console.log(data);\r\n        ADMIN.register_suppliers(data).then(response => {\r\n            this.get_all_suppliers_func()\r\n            Config.setToast(\"Successfully Registed\")\r\n            this.clear()\r\n\r\n        }).catch(err => {\r\n            Config.setErrorToast(\"Someting went wrong\")\r\n        })\r\n\r\n    }\r\n\r\n    clear = () => {\r\n        this.setState({\r\n            name: '',\r\n            contactNumber: '',\r\n            email: '',\r\n            password: Config.password,\r\n            address: ''\r\n        })\r\n    }\r\n    render() {\r\n        const { name, contactNumber, email } = this.state\r\n        const role = this.props.auth.user.role;\r\n        return (\r\n            <div className=\"bg-light wd-wrapper\">\r\n                <SideBar active={\"suppliers\"} />\r\n\r\n                <div className=\"wrapper-wx\" >\r\n                    <div className=\"container-fluid\" >\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h6 className=\"text-dark bold-normal py-3 bg-white shadow-sm px-3 mt-3 rounded\">\r\n                                    Supplier Management\r\n                                </h6>\r\n                            </div>\r\n                            {role == 3 && <div className=\"col-12\" >\r\n                                <div className=\"card border-0 shadow-sm rounded mt-2 bg-white pb-2\">\r\n                                    <form className=\" py-2  px-3 supliers\" onSubmit={(e) => this.onSubmit(e)}>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-6\">\r\n                                                <h6 className=\"form-label mt-2 mb-2\">Name *</h6>\r\n                                                <input\r\n                                                    id=\"s_name\"\r\n                                                    type=\"text\"\r\n                                                    name=\"name\"\r\n                                                    placeholder=\"Enter Supplier Name\"\r\n                                                    value={name}\r\n                                                    className=\"form-control\" onChange={(e) => this.formValueChange(e)} required></input>\r\n\r\n                                                <h6 className=\"form-label mt-3 mb-2\">Email *</h6>\r\n                                                <input\r\n                                                    id=\"s_email\"\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    placeholder=\"Enter Supplier Email\"\r\n                                                    value={email}\r\n                                                    className=\"form-control\" onChange={(e) => this.formValueChange(e)} required></input>\r\n\r\n                                                <h6 className=\"form-label mt-3 mb-2\">Address *</h6>\r\n                                                <input\r\n                                                    id=\"s_address\"\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    placeholder=\"Enter Supplier Address\"\r\n                                                    //value={email}\r\n                                                    className=\"form-control\"\r\n                                                    onChange={(e) => this.formValueChange(e)} required></input>\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                <h6 className=\"form-label mt-2 mb-2\">Contact Number *</h6>\r\n                                                <input\r\n                                                    id=\"c_number\"\r\n                                                    type=\"number\"\r\n                                                    name=\"contactNumber\"\r\n                                                    placeholder=\"Enter Contact No\"\r\n                                                    value={contactNumber}\r\n                                                    className=\"form-control\" onChange={(e) => this.formValueChange(e)} required></input>\r\n                                                <h6 className=\"form-label mt-3 mb-2\">Password  *</h6>\r\n                                                <input\r\n                                                    type=\"password\"\r\n                                                    name=\"password\"\r\n                                                    placeholder=\"Automaticaly Generate and Email\"\r\n                                                    className=\"form-control\" disabled></input>\r\n                                                <br></br>\r\n                                                <div className=\"d-flex mt-3\">\r\n\r\n                                                    <button type=\"submit\" className=\"font-weight-bold px-2 btn btn-dark  btn-sm bold-normal\"   >\r\n                                                        Add Supplier\r\n                                                </button>\r\n                                                    <button type=\"reset\" onClick={() => this.clear()} className=\"font-weight-bold px-2 ml-2  btn btn-secondary  btn-sm bold-normal\" >\r\n                                                        Cancel\r\n                                                </button>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                                {/* <button onClick={() => this.getAllManagers()}>Vee</button> */}\r\n                            </div>}\r\n                            {/* ----------------------------------------------------------- */}\r\n                            <div className=\"col-12\">\r\n                                <div className=\"card border-0 shadow-sm rounded mt-2 bg-white pb-2\">\r\n\r\n                                    <div className=\"table-responsive px-2\">\r\n                                        <table className=\"table table-stripped\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Name</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Email</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Address</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Contact No</h6></th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {this.state.suppliers_arry && this.state.suppliers_arry.map(item => this.display_all_supliers(item))}\r\n                                                {this.state.loading &&\r\n                                                    <td colSpan={4}><h6 className=\"text-dark normal text-center py-2\">Loading...</h6></td>\r\n                                                }\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    display_all_supliers = data_arry => {\r\n        console.log(this.state.suppliers_arry);\r\n        return (\r\n            <tr key={data_arry._id}>\r\n                <td> <h6 className=\"text-dark normal\">{data_arry.name}</h6></td>\r\n                <td> <h6 className=\"text-dark normal\">{data_arry.email}</h6></td>\r\n                <td> <h6 className=\"text-dark normal\">{data_arry.address} </h6></td>\r\n                <td> <h6 className=\"text-dark normal\">{data_arry.phoneNo}</h6></td>\r\n\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth || {},\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(withRouter(SupliersAdmin));\r\n","      /*  eslint-disable */\r\nimport React, { Component } from 'react';\r\nimport SideBar from '../../Common/Sidebar'\r\nimport Config from '../../Controller/Config.controller'\r\nimport ADMIN from '../../Controller/Admin.controller'\r\nimport moment from 'moment'\r\nimport { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faPenAlt, faEye, faEnvelope, faBan } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass OrderAdmin extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email:'',\r\n            name:''\r\n\r\n\r\n        };\r\n    }\r\n    formValueChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    change_toggle = () => {\r\n        if (this.state.addSuplierState) {\r\n            this.setState({ addSuplierState: false })\r\n        } else {\r\n            this.setState({ addSuplierState: true })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"bg-light wd-wrapper\">\r\n                <SideBar active={\"orders\"} />\r\n                <div className=\"wrapper-wx\" >\r\n                    <div className=\"container-fluid\" >\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h5 className=\"text-dark bold-normal py-2 bg-white shadow-sm px-2 mt-3 rounded\">\r\n                                    Orders Management\r\n                                </h5>\r\n                            </div>\r\n                            <div className=\"col-12\">\r\n                                <div className=\"card border-0 shadow-sm rounded mt-3 bg-white pb-2\">\r\n                                    <form className=\" py-2  px-3 ordersearch\" onSubmit={(e) => this.onSubmit(e)}>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-6\">\r\n                                                <h6 className=\"form-label py-2\">Supplier Name</h6>\r\n                                                <input\r\n                                                    id=\"s_name\"\r\n                                                    type=\"text\"\r\n                                                    name=\"name\"\r\n                                                    className=\"form-control\" ></input>\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                <h6 className=\"form-label py-2\">Site Manager Name</h6>\r\n                                                <input\r\n                                                   id=\"s_site_manager\"\r\n                                                    type=\"text\"\r\n                                                    name=\"email\"\r\n                                                    className=\"form-control\" >\r\n                                                </input>\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                <h6 className=\"form-label py-2\">Start Date</h6>\r\n                                                <input\r\n                                                    type=\"date\"\r\n                                                    name=\"name\"\r\n                                                    className=\"form-control\" ></input>\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                <h6 className=\"form-label py-2\">End Date</h6>\r\n                                                <input\r\n                                                    type=\"date\"\r\n                                                    name=\"name\"\r\n                                                    className=\"form-control\" ></input>\r\n                                            </div>\r\n                                            <div className=\"col-md-4 mt-3\">\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-md-6\">\r\n                                                        <button type=\"reset\" className=\" btn btn-secondary   bold-normal\" style={{ width: '100%' }} >\r\n                                                            Reset\r\n                                                </button>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-6\">\r\n                                                        <button type=\"submit\" className=\" btn btn-dark   bold-normal\" style={{ width: '100%' }}>\r\n                                                            Search\r\n                                                    </button>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                            {/* ----------------------------------------------------------- */}\r\n                            <div className=\"col-12\">\r\n                                <div className=\"card border-0 shadow-sm rounded mt-3 bg-white pb-2\">\r\n                                    <h5 className=\"text-dark bold-normal py-2 bg-white px-2\">\r\n                                        All Orders\r\n                                </h5>\r\n                                    <div className=\"table-responsive px-2\">\r\n                                        <table className=\"table table-stripped\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th scope=\"col\">Date</th>\r\n                                                    <th scope=\"col\">No.Items</th>\r\n                                                    <th scope=\"col\">Site Location</th>\r\n                                                    <th scope=\"col\">Actions</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td>{moment(new Date(\"2020-10-06\")).format('YYYY MMM DD')}</td>\r\n                                                    <td>05</td>\r\n                                                    <td>Galle - Main Street(GL05)</td>\r\n                                                    <td>\r\n                                                        <Link to=\"/admin/orders/1\">\r\n                                                            <button className=\"btn btn-success btn-sm px-2 mr-2\">\r\n                                                                <FontAwesomeIcon icon={faEye} />\r\n                                                            </button>\r\n                                                        </Link>\r\n                                                        {/* <a className=\"btn btn-info btn-sm px-2 mr-2\" href={`mailto:samankumara@gmail.com`}  >\r\n                                                            <FontAwesomeIcon icon={faEnvelope} />\r\n                                                        </a> */}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default OrderAdmin;","/*  eslint-disable */\r\nimport React, { Component } from 'react';\r\nimport SideBar from '../../Common/Sidebar'\r\nimport Config from '../../Controller/Config.controller'\r\nimport ADMIN from '../../Controller/Admin.controller'\r\nimport {gettotal , render_state , current_state , state_color} from '../../Controller/Util.controller'\r\nimport moment from 'moment'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faPenAlt, faEye, faEnvelope, faBan } from '@fortawesome/free-solid-svg-icons'\r\nimport { withRouter } from 'react-router-dom'\r\nimport Loader from '../Loading'\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom'\r\nimport Axios from 'axios';\r\nimport _ from 'lodash'\r\n\r\nexport default class Sites extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n           id : props.match.params.id ,\r\n           site : {},\r\n           loading : true,\r\n           orders : []\r\n        };\r\n    \r\n    }\r\n\r\n    componentDidMount(){\r\n        ADMIN.get_order_by_site_id(this.props.match.params.id)\r\n        .then( result => {\r\n             this.setState({orders : result.data.data  })\r\n             return ADMIN.get_single_site(this.props.match.params.id)\r\n        })\r\n        .then( result => {\r\n             this.setState({ loading : false , site : result.data.data })\r\n        })\r\n        .catch( err => {\r\n            console.log(err)\r\n            this.setState({ loading : false })\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const {site , id , orders , loading} = this.state\r\n\r\n        return (\r\n            <div className=\"bg-light wd-wrapper\">\r\n                <SideBar active={\"sites\"} />\r\n                <div className=\"wrapper-wx\" >\r\n                    <div className=\"container-fluid\" >\r\n                        <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                                <h6 className=\"text-dark bold-normal py-3 bg-white shadow-sm px-3 mt-3 rounded\">\r\n                                    Site Details \r\n                                </h6>\r\n                            </div>\r\n                           \r\n                            <div className=\"col-12\">\r\n                                <div className=\"card border-0 shadow-sm rounded mt-2 bg-white pb-2\">\r\n                                    <form className=\" py-2  px-3 \">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-6\">\r\n                                                <h6 className=\"form-label mb-2 mt-2\">Address</h6>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    value={site.address}\r\n                                                    readOnly\r\n                                                    className=\"form-control\"></input>\r\n\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                            <h6 className=\"form-label mb-2 mt-2\">Site Code</h6>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    name=\"sitecode\"\r\n                                                    value={site.site_code}\r\n                                                    readOnly\r\n                                                    className=\"form-control\"></input>\r\n                                            </div>\r\n                                           \r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                            {/* ----------------------------------------------------------- */}\r\n                            <div className=\"col-12\">\r\n                                <div className=\"card border-0 shadow-sm rounded mt-2 bg-white pb-2\">\r\n                                    <div className=\"table-responsive px-2\">\r\n                                        <table className=\"table table-stripped\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Delivery Date</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">No.Items</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Total</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Current State</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Actions</h6></th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                { !loading && orders && orders.map((item,i) => this.display(item,i))  }\r\n\r\n                                                {loading &&\r\n                                                    <td colSpan={5}><h6 className=\"text-dark normal text-center py-2\">Loading...</h6></td>\r\n                                                }\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                            {/* ------------------------------------------------------------------------------------------ */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    display = (row,i) => {\r\n        return (\r\n            <tr key={row._id}>\r\n                 <td><h6 className=\"text-dark normal\">{moment(row.date).format('LL')}</h6></td>\r\n                 <td><h6 className=\"text-dark normal\">{(\"0\" + (row.items.length)).slice(-2)}</h6></td>\r\n                 <td><h6 className=\"text-dark normal\">{`LKR ${Config.numberWithCommas(gettotal(row.items))}.00`}</h6></td>\r\n                 <td><span className={`mr small rounded py-1 px-2 ${state_color(row.current_state)}`}>\r\n                        {current_state(row.current_state)}\r\n                    </span>\r\n                </td>\r\n                 <td>\r\n                 <Link to={`/admin/orders/${row._id}`}>\r\n                    <span className=\" rounded py-1 px-2 bg-success text-white\">\r\n                    <FontAwesomeIcon icon={faEye} className=\"mr-1\"/> Details\r\n                    </span>\r\n                    </Link>\r\n                 </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\n","      /*  eslint-disable */\r\nimport React, { Component } from 'react';\r\nimport SideBar from '../../Common/Sidebar'\r\nimport Config from '../../Controller/Config.controller'\r\nimport ADMIN from '../../Controller/Admin.controller'\r\nimport moment from 'moment'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faPenAlt, faEye, faEnvelope, faBan } from '@fortawesome/free-solid-svg-icons'\r\nimport '../../asserts/singeorder.css'\r\nimport {connect } from 'react-redux'\r\nclass SingleOrder extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id : props.match.params.id,\r\n            item : null ,\r\n            supplier : null ,\r\n            site : null ,\r\n            comment : '' ,\r\n            loading : true\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getData();\r\n    }\r\n\r\n    getData = () => {\r\n        let site_id = null;\r\n        ADMIN.get_single_order(this.props.match.params.id)\r\n        .then( result => {\r\n            this.setState({ item : result.data.data.order , supplier  :  result.data.data.supplier })\r\n            site_id = result.data.data.order.site\r\n            return ADMIN.get_all_sites()\r\n        })\r\n        .then( result => {\r\n            let current_site = result.data.data.find( site => site._id == site_id)\r\n            if(current_site){\r\n                this.setState({ site : current_site , loading : false })\r\n            }\r\n        })\r\n        .catch( err => {\r\n            console.log(err);\r\n            this.setState({loading : false , item : null  })\r\n        })\r\n    }\r\n\r\n    Submit = (data) => {\r\n        this.setState({loading : true})\r\n        ADMIN.update_state(data)\r\n        .then( result => {\r\n            this.getData();\r\n            Config.setToast(\"Order Status Change Successfully\")\r\n        })\r\n        .catch( err => {\r\n            this.setState({loading : false})\r\n            Config.setErrorToast(\"Order Status Change Failed\")\r\n        })\r\n    }\r\n\r\n    Approve = () => {\r\n        const {auth} = this.props;\r\n        const { id , comment} = this.state;\r\n        const role = auth.user.role;\r\n        let state = 1 \r\n        let cm = \"\"\r\n\r\n        if(role == 2){\r\n            state = 2\r\n            cm = 'Accountant Approved'\r\n        }\r\n\r\n        if(role == 3){\r\n            state = 3\r\n            cm = 'Management Approved'\r\n        }\r\n\r\n        if(role == 0){\r\n            state = 4\r\n            cm = 'Supplier Approved'\r\n        }\r\n\r\n        this.Submit({\r\n            id : id ,\r\n            state : {\r\n                state : state,\r\n                comment : cm ,\r\n                date : new Date(),\r\n                note : comment\r\n            }\r\n        })\r\n    }\r\n\r\n    Reject = () => {\r\n        const {auth} = this.props;\r\n        const role = auth.user.role;\r\n        const { id , comment} = this.state;\r\n        if(comment.length > 0 ){\r\n        this.Submit({\r\n            id : id ,\r\n            state : {\r\n                state : 0,\r\n                comment : \"Rejected\" ,\r\n                date : new Date(),\r\n                note : comment ,\r\n                by : role\r\n            }\r\n        })\r\n        }else{\r\n            Config.showAlert('Comment is required if you are rejecting an order !' ,'' )\r\n        }\r\n    }\r\n   \r\n    render() {\r\n        const {auth} = this.props;\r\n        const { item , loading , supplier , site , comment} = this.state;\r\n        return (\r\n            <div className=\"bg-light wd-wrapper\">\r\n                <SideBar active={\"orders\"} />\r\n                <div className=\"wrapper-wx\" >\r\n                    <div className=\"container-fluid pb-2\" >\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h6 className=\"text-dark bold-normal py-3 bg-white shadow-sm px-3 mt-3 rounded\">\r\n                                    Order Details \r\n                                </h6>\r\n                            </div>\r\n                            { loading && <div className=\"col-12\">\r\n                                <h6 className=\"text-dark font-weight-bold py-2 bg-white shadow-sm px-3 mt-2 rounded small text-center\">\r\n                                    Loading...\r\n                                </h6>\r\n                            </div>}\r\n                            \r\n                            { !loading && item != null && \r\n                            <>\r\n                            <div className=\"col-6\">\r\n                                <div className=\"card border-0 shadow-sm rounded mt-2 bg-white pb-2\">\r\n                                    <div className=\"card-header m-0 p-0 bg-white2\" >\r\n                                        <h6 className=\"text-dark bold-normal py-2 px-3 mb-0 form-label\">\r\n                                            Construction Site Details\r\n                                        </h6>\r\n                                    </div>\r\n                                    <div className=\" py-2  px-3\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-6\">\r\n                                                <h6 className=\"form-label mt-2 mb-2\" >Site Manager Name</h6>\r\n                                                <input style={{backgroundColor : '#fcfcfc'}}\r\n                                                    type=\"text\"\r\n                                                    name=\"supliername\"\r\n                                                    value={site.site_manager && site.site_manager.username}\r\n                                                    className=\"form-control-sm form-control\"\r\n                                                    readOnly >\r\n                                                </input>\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                <h6 className=\"form-label mt-2 mb-2\" >Site Contact No</h6>\r\n                                                <input style={{backgroundColor : '#fcfcfc'}}\r\n                                                    type=\"text\"\r\n                                                    name=\"supliername\"\r\n                                                    value={site.site_manager && site.site_manager.contact_number}\r\n                                                    className=\"form-control-sm form-control\"\r\n                                                    readOnly >\r\n                                                </input>\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                <h6 className=\"form-label  mt-2 mb-2\" >Site Location</h6>\r\n                                                <input style={{backgroundColor : '#fcfcfc'}}\r\n                                                    type=\"text\"\r\n                                                    name=\"supliername\"\r\n                                                    value={site.address}\r\n                                                    className=\"form-control-sm form-control\"\r\n                                                    readOnly >\r\n                                                </input>\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                <h6 className=\"form-label mt-2 mb-2\" >Site Code</h6>\r\n                                                <input style={{backgroundColor : '#fcfcfc'}}\r\n                                                    type=\"text\"\r\n                                                    name=\"supliername\"\r\n                                                    value={site.site_code}\r\n                                                    className=\"form-control-sm form-control\"\r\n                                                    readOnly>\r\n                                                </input>\r\n                                            </div>\r\n                                           \r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-6\">\r\n                                <div className=\"card border-0 shadow-sm rounded mt-2 bg-white pb-2\">\r\n                                    <div className=\"card-header m-0 p-0 bg-white2\" >\r\n                                        <h6 className=\"text-dark bold-normal py-2 px-3 mb-0 form-label\">\r\n                                            Supplier Details\r\n                                            {/* {JSON.stringify(site)} */}\r\n                                        </h6>\r\n                                    </div>\r\n                                    <div className=\" py-2  px-3\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-6\">\r\n                                                <h6 className=\"form-label mt-2 mb-2\" >Supplier Name</h6>\r\n                                                <input style={{backgroundColor : '#fcfcfc'}}\r\n                                                    type=\"text\"\r\n                                                    name=\"supliername\"\r\n                                                    value={supplier.name}\r\n                                                    className=\"form-control-sm form-control\"\r\n                                                    readOnly >\r\n                                                </input>\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                <h6 className=\"form-label mt-2 mb-2\" >Supplier Contact No</h6>\r\n                                                <input style={{backgroundColor : '#fcfcfc'}}\r\n                                                    type=\"text\"\r\n                                                    name=\"supliername\"\r\n                                                    value={supplier.phoneNo}\r\n                                                    className=\"form-control-sm form-control\"\r\n                                                    readOnly >\r\n                                                </input>\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                <h6 className=\"form-label  mt-2 mb-2\" >Email Address</h6>\r\n                                                <input style={{backgroundColor : '#fcfcfc'}}\r\n                                                    type=\"text\"\r\n                                                    name=\"supliername\"\r\n                                                    value={supplier.email}\r\n                                                    className=\"form-control-sm form-control\"\r\n                                                    readOnly >\r\n                                                </input>\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                <h6 className=\"form-label mt-2 mb-2\" >Address</h6>\r\n                                                <input style={{backgroundColor : '#fcfcfc'}}\r\n                                                    type=\"text\"\r\n                                                    name=\"supliername\"\r\n                                                    value={supplier.address}\r\n                                                    className=\"form-control-sm form-control\"\r\n                                                    readOnly>\r\n                                                </input>\r\n                                            </div>\r\n                                           \r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            {/* ----------------------------------------------------------- */}\r\n                            <div className=\"col-9 pb-3\">\r\n                                <div className=\"card border-0 shadow-sm rounded mt-3 bg-white pb-2 h-100\">\r\n                                    <div className=\"card-header m-0 p-0 bg-white2\" >\r\n                                        <h6 className=\"text-dark bold-normal py-2 px-3 mb-0 form-label\">\r\n                                           Order Item Details\r\n                                        </h6>\r\n                                    </div>\r\n                                   \r\n                                    <div className=\"table-responsive px-2\">\r\n                                        <table className=\"table table-stripped\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th scope=\"col\"><h6 className=\"normal mb-0 \">Item Name</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"normal mb-0 \">Quantity</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"normal mb-0 \">Price</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"normal mb-0 \">Sub Total</h6></th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                { item.items.map( row => (\r\n                                                    <tr>\r\n                                                        <td><h6 className=\"text-dark normal\">{row.item.name}</h6></td>\r\n                                                        <td><h6 className=\"text-dark normal\">{row.quantity}</h6></td>\r\n                                                        <td><h6 className=\"text-dark normal\">{`LKR ${row.item.price}.00`}</h6></td>\r\n                                                        <td><h6 className=\"text-dark normal\">{`LKR ${Config.numberWithCommas(parseInt(row.item.price) * parseInt(row.quantity))}.00`}</h6></td>\r\n                                                    </tr>\r\n                                                ))}\r\n                                                <tr>\r\n                                                    <td className=\"bg-light\" colSpan={2}></td>\r\n                                                    <td className=\"bg-light\"><h6 className=\"normal \">Total</h6></td>\r\n                                                    <td  className=\"bg-light\"><h6 className=\"normal text-left\">{`LKR ${Config.numberWithCommas(this.gettotal(item.items))}.00`}</h6></td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-3 pb-3\">\r\n                                <div className=\"card border-0 shadow-sm rounded mt-3 bg-white pb-2 h-100\">\r\n                                    <div className=\"card-header m-0 p-0 bg-white2\" >\r\n                                        <h6 className=\"text-dark bold-normal py-2 px-3 mb-0 form-label\">\r\n                                            Order Status Log\r\n                                        </h6>\r\n                                    </div>\r\n                                    <div className=\"table-responsive px-2\">\r\n                                        <table className=\"table table-stripped\">\r\n                                            <tbody>\r\n                                                {  item.state.map( row => (\r\n                                                    <tr>\r\n                                                        <td>{this.render_state(row)} \r\n                                                        {row.note && row.note.length > 0 && \r\n                                                        <h6 className=\"text-muted bold-normal small text-left  py-2 mb-0 mt-1\">{row.note && row.note.length > 0 && row.note}</h6>}\r\n                                                        <h6 className=\"text-dark small text-left mb-0 mt-1\">{moment(row.date).calendar()}</h6>\r\n                                                        </td>\r\n                                                       \r\n                                                    </tr>\r\n                                                ))}\r\n                                               \r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-12 mb-2\">\r\n                                {/* ------------------------------------ */}\r\n                                { auth.user.role == 2 && item.current_state == 1 &&  \r\n                                <div className=\"card border-0 shadow-sm rounded mt-3 bg-white pb-2\">\r\n                                   \r\n                                    <div className=\"col-12 pb-2 mt-2\" >\r\n                                        <h6 className=\"text-dark bold-normal py-2 px-2 mb-0 normal \">\r\n                                        Accountant approval need to procceed. Adding a comment is optional</h6>\r\n                                        <textarea \r\n                                            rows={2}\r\n                                            value={comment}\r\n                                            onChange={(e) => this.setState({comment : e.target.value})}\r\n                                            placeholder={'Add a note to check others'}\r\n                                            className=\"form-control mx-2 w-75 mt-1\">    \r\n                                        </textarea>\r\n                                        <div className=\"mx-2 mt-2\" >\r\n                                        <button \r\n                                            onClick={this.Approve}\r\n                                            className=\"btn btn-sm btn-success mr-2\">Approve</button>\r\n                                        <button \r\n                                            onClick={this.Reject}\r\n                                            className=\"btn btn-sm btn-danger\">Reject</button>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>}\r\n                                {/* ------------------------------------ */}\r\n                                { auth.user.role == 3 && item.current_state == 2 &&  \r\n                                <div className=\"card border-0 shadow-sm rounded mt-3 bg-white pb-2\">\r\n                                   \r\n                                    <div className=\"col-12 pb-2 mt-2\" >\r\n                                        <h6 className=\"text-dark bold-normal py-2 px-2 mb-0 normal \">\r\n                                        Management approval need to procceed. Adding a comment is optional</h6>\r\n                                        <textarea \r\n                                            rows={2}\r\n                                            value={comment}\r\n                                            onChange={(e) => this.setState({comment : e.target.value})}\r\n                                            placeholder={'Add a note to check others'}\r\n                                            className=\"form-control mx-2 w-75 mt-1\">    \r\n                                        </textarea>\r\n                                        <div className=\"mx-2 mt-2\" >\r\n                                        <button \r\n                                            onClick={this.Approve}\r\n                                            className=\"btn btn-sm btn-success mr-2\">Approve</button>\r\n                                        <button \r\n                                            onClick={this.Reject}\r\n                                            className=\"btn btn-sm btn-danger\">Reject</button>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>}\r\n                                {/* ----------------------------------------------------- */}\r\n                                { auth.user.role == 0 && item.current_state == 3 &&  \r\n                                <div className=\"card border-0 shadow-sm rounded mt-3 bg-white pb-2\">\r\n                                   \r\n                                    <div className=\"col-12 pb-2 mt-2\" >\r\n                                        <h6 className=\"text-dark bold-normal py-2 px-2 mb-0 normal \">\r\n                                        Supplier approval need to procceed. Adding a comment is optional</h6>\r\n                                        <textarea \r\n                                            rows={2}\r\n                                            value={comment}\r\n                                            onChange={(e) => this.setState({comment : e.target.value})}\r\n                                            placeholder={'Add a note to check others'}\r\n                                            className=\"form-control mx-2 w-75 mt-1\">    \r\n                                        </textarea>\r\n                                        <div className=\"mx-2 mt-2\" >\r\n                                        <button \r\n                                            onClick={this.Approve}\r\n                                            className=\"btn btn-sm btn-success mr-2\">Approve</button>\r\n                                        <button \r\n                                            onClick={this.Reject}\r\n                                            className=\"btn btn-sm btn-danger\">Reject</button>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>}\r\n                                {/* ----------------------------------------------------- */}\r\n                            </div>\r\n                            </>\r\n                            }\r\n\r\n                            { !loading && item == null && <div className=\"col-12\">\r\n                                <h6 className=\"text-dark font-weight-bold py-3 bg-white shadow-sm px-3 mt-2 rounded small text-center\">\r\n                                    No Item Found !\r\n                                </h6>\r\n                            </div>}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render_state = (status) => {\r\n        switch(parseInt(status.state)){\r\n            case 0 : return  <span className=\"mr-1 small rounded bg-danger py-1 px-2 text-white \">{status.comment}</span>\r\n            case 1 : return  <span className=\"mr-1 small rounded bg-info py-1 px-2 text-white \">{status.comment}</span>\r\n            case 2 : return  <span className=\"mr-1 small rounded state2 py-1 px-2 text-white\">{status.comment}</span> \r\n            case 3 : return  <span className=\"mr-1 small rounded state3 py-1 px-2 text-white\">{status.comment}</span> \r\n            case 4 : return  <span className=\"mr-1 small rounded state4 py-1 px-2 text-white\">{status.comment}</span>\r\n            case 5 : return  <span className=\"mr-1 small rounded bg-success py-1 px-2 text-white\">{status.comment}</span>\r\n          }\r\n    }\r\n\r\n    gettotal = (items = []) => {\r\n        return items.reduce( (acc,current) => {\r\n          if(current.item && current.item.price && current.quantity){\r\n              return acc + (current.item.price * current.quantity)\r\n          }else{\r\n            return acc\r\n          }\r\n        },0)\r\n      }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth || {},\r\n});\r\nexport default  connect(mapStateToProps)(SingleOrder);","      /*  eslint-disable */\r\nimport React, { Component } from 'react';\r\nimport SideBar from '../../Common/Sidebar'\r\nimport Config from '../../Controller/Config.controller'\r\nimport ADMIN from '../../Controller/Admin.controller'\r\nimport moment from 'moment'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faPenAlt, faEye, faEnvelope, faBan } from '@fortawesome/free-solid-svg-icons'\r\nimport { withRouter } from 'react-router-dom'\r\nimport Loader from '../Loading'\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Sites extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            addManagerState: false,\r\n            address: '',\r\n            site_code: '',\r\n            site_manager: '',\r\n            loading: true,\r\n            site_managers_arry: [],\r\n        };\r\n        this.get_all_site_managers()\r\n        this.get_all_sites()\r\n\r\n\r\n    }\r\n    formValueChange = (e) => {\r\n        // console.log(e.target.value);\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    change_toggle = () => {\r\n        if (this.state.addManagerState) {\r\n            this.setState({ addManagerState: false })\r\n        } else {\r\n            this.setState({ addManagerState: true })\r\n        }\r\n    }\r\n\r\n    onSubmit = async (e) => {\r\n        e.preventDefault()\r\n        if (this.state.site_manager == \"\" | this.state.site_manager == null) {\r\n            return Config.setErrorToast(\"Someting went wrong\")\r\n        }\r\n        var data = {\r\n            address: this.state.address,\r\n            site_code: this.state.site_code,\r\n            site_manager: this.state.site_manager,\r\n        }\r\n        ADMIN.add_site(data).then(result => {\r\n            // console.log(result);\r\n            this.clear()\r\n            this.get_all_sites()\r\n            this.get_all_site_managers()\r\n            this.renderOptions()\r\n            Config.setToast(\"Successfully Added\")\r\n\r\n        }).catch(err => {\r\n            // console.log(err);\r\n            Config.setErrorToast(\"Someting went wrong\")\r\n\r\n        })\r\n\r\n    }\r\n    clear = () => {\r\n        this.setState({\r\n            address: '',\r\n            site_code: '',\r\n        })\r\n    }\r\n    get_all_site_managers = async () => {\r\n        ADMIN.get_all_site_managers().then(response => {\r\n\r\n            // console.log(response.data.data);\r\n            this.setState({\r\n                site_managers_arry: response.data.data,\r\n            })\r\n            // console.log(this.state.site_managers_arry);\r\n\r\n        }).then(res => {\r\n            this.renderOptions()\r\n            // console.log(this.state.site_managers_arry);\r\n\r\n        }).then(res => {\r\n\r\n            this.setState({\r\n                loading: false,\r\n\r\n            });\r\n        })\r\n\r\n    }\r\n\r\n    get_all_sites = () => {\r\n        ADMIN.get_all_sites().then(result => {\r\n            this.setState({\r\n                all_sites: result.data.data\r\n            })\r\n        }).catch(err => {\r\n            // console.log(err);\r\n        })\r\n    }\r\n\r\n    renderOptions() {\r\n        // console.log(this.state.site_managers_arry);\r\n        return this.state.site_managers_arry.filter(user => user.site_code == \"\").map((dt, i) => {\r\n            return (<option className=\"form-control\" value={dt._id}> {dt.username}</option>)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { address, site_code, site_manager } = this.state\r\n        const role = this.props.auth.user.role;\r\n\r\n        return (\r\n            <div className=\"bg-light wd-wrapper\">\r\n                <SideBar active={\"sites\"} />\r\n                <div className=\"wrapper-wx\" >\r\n                    <div className=\"container-fluid\" >\r\n                        <Loader show={this.state.loading} />\r\n                        <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                                <h6 className=\"text-dark bold-normal py-3 bg-white shadow-sm px-3 mt-3 rounded\">\r\n                                   Site Management\r\n                                </h6>\r\n                            </div>\r\n                            { role== 3 &&\r\n                            <div className=\"col-12\">\r\n                                <div className=\"card border-0 shadow-sm rounded mt-2 bg-white pb-2\">\r\n                                    <form className=\" py-2  px-3 \" onSubmit={(e) => this.onSubmit(e)}>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-6\">\r\n                                                <h6 className=\"form-label mb-2 mt-2\">Address *</h6>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    name=\"address\"\r\n                                                    placeholder=\"Enter Site Address\"\r\n                                                    value={address}\r\n                                                    className=\"form-control\" onChange={(e) => this.formValueChange(e)} required></input>\r\n                                                <h6 className=\"form-label mb-2 mt-3\">Site Code *</h6>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    name=\"site_code\"\r\n                                                    placeholder=\"Enter Side Code\"\r\n                                                    value={site_code}\r\n                                                    className=\"form-control\" onChange={(e) => this.formValueChange(e)} required></input>\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                <h6 className=\"form-label mb-2 mt-2\">Site Manager *</h6>\r\n                                                <select\r\n                                                    name=\"site_manager\"\r\n                                                    value={site_manager}\r\n                                                    className=\"form-control\" onChange={(e) => this.formValueChange(e)} required>\r\n                                                    <option className=\"form-control\" value=\"\"> Select Site Manager</option>\r\n                                                    {this.renderOptions()}\r\n\r\n                                                </select>\r\n                                                <br></br>\r\n                                                <div className=\"d-flex mt-3\">\r\n                                                    <button type=\"submit\" className=\"font-weight-bold px-2 btn btn-dark  btn-sm bold-normal\"   >\r\n                                                        Add Site\r\n                                                </button>\r\n                                                    <button type=\"reset\" onClick={() => this.clear()} className=\"font-weight-bold px-2 ml-2  btn btn-secondary  btn-sm bold-normal\" >\r\n                                                        Cancel\r\n                                                </button>\r\n                                                </div>\r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>}\r\n                            {/* ----------------------------------------------------------- */}\r\n                            <div className=\"col-12\">\r\n                                <div className=\"card border-0 shadow-sm rounded mt-2 bg-white pb-2\">\r\n                                    <div className=\"table-responsive px-2\">\r\n                                        <table className=\"table table-stripped\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">ID</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Site Code</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Site Addreess</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Site Manager</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Actions</h6></th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {this.state.all_sites \r\n                                                && this.state.all_sites.map((item,i) => this.display_all_site_managers(item,i))}\r\n\r\n                                                {this.state.loading &&\r\n                                                    <td colSpan={4}><h6 className=\"text-dark normal text-center py-2\">Loading...</h6></td>\r\n                                                }\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    display_all_site_managers = (data_arry,i) => {\r\n        // console.log(this.state.all_sites);\r\n        return (\r\n            <tr key={data_arry._id}>\r\n                 <td><h6 className=\"text-dark normal\">{(\"0\" + (i+1)).slice(-2)}</h6></td>\r\n                 <td><h6 className=\"text-dark normal\">{data_arry.site_code}</h6></td>\r\n                 <td><h6 className=\"text-dark normal\">{data_arry.address}</h6></td>\r\n                 <td><h6 className=\"text-dark normal\">{data_arry.site_manager.username}</h6></td>\r\n                 <td>\r\n                 <Link to={`/admin/sites/${data_arry._id}`}>\r\n                    <span className=\" rounded py-1 px-2 bg-success text-white\">\r\n                    <FontAwesomeIcon icon={faEye} className=\"mr-1\"/> Details\r\n                    </span>\r\n                    </Link>\r\n                 </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth || {},\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(withRouter(Sites));\r\n","import axios from \"axios\";\r\nimport Config from \"./Config.controller\";\r\n\r\n//insert an item\r\nexport const insertItem = (data) => {\r\n    return new Promise( (resolve,reject) => {\r\n        return axios.post(`${Config.host}${Config.port}/api/items/create` , data)\r\n            .then( result => {\r\n                if(result.status == 200){\r\n                    resolve({...result.data , status : 200})\r\n               }else{\r\n                resolve({ status : result.status })\r\n               }\r\n            })\r\n            .catch( err => {\r\n                reject(err);\r\n            })\r\n    })\r\n}\r\n\r\n//get all items\r\nexport const get_all_items = () => {\r\n    return new Promise( (resolve,reject) => {\r\n        return axios.get(`${Config.host}${Config.port}/api/items/get_all`)\r\n            .then( result => {\r\n               if(result.status == 200){\r\n                    resolve(result)\r\n               }else{\r\n                   \r\n                resolve([])\r\n               }\r\n            })\r\n            .catch( err => {\r\n                reject(err)\r\n            })\r\n    })\r\n}\r\n//get all suppliers\r\nexport const get_all_suppliers = () => {\r\n    return new Promise( (resolve,reject) => {\r\n        return axios.get(`${Config.host}${Config.port}/api/suppliers/get`)\r\n            .then( result => {\r\n               if(result.status == 200){\r\n                    resolve(result)\r\n               }else{\r\n                   \r\n                resolve({status : result.status})\r\n               }\r\n            })\r\n            .catch( err => {\r\n                reject(err)\r\n            })\r\n    })\r\n}\r\n\r\n//delete an item\r\nexport const deleteItem = (id) => {\r\n    console.log(\"id eka mekada balanna\", id);\r\n    return new Promise((resolve, reject) => {\r\n      return axios\r\n        .delete(`${Config.host}${Config.port}/api/items/delete/${id}`)\r\n        .then((result) => {\r\n          resolve({ code: 200, message: result.data.message });\r\n        })\r\n        .catch((err) => {\r\n          reject({ code: 0, error: err });\r\n        });\r\n    });\r\n  };","      /*  eslint-disable */\r\nimport React, { Component } from 'react';\r\nimport SideBar from '../../Common/Sidebar'\r\nimport Config from '../../Controller/Config.controller'\r\nimport {get_all_items , deleteItem } from '../../Controller/Items.controller'\r\nimport moment from 'moment'\r\nclass ItemsAdmin extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isLoaded: false,\r\n            supplierList:[],\r\n            itemsList:[],\r\n            supplier:{},\r\n            item_id: '',\r\n            description:'',\r\n            item_name:'',\r\n            price:'',\r\n        \r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.load_items_data();\r\n        \r\n    }\r\n\r\n    load_items_data =  () => {\r\n        get_all_items().then( results => {\r\n            this.setState({\r\n                isLoaded: true,\r\n                itemsList: results.data.data,\r\n            });\r\n            console.log(\"Items data\",results.data.data);\r\n        }\r\n        ).catch( err=> {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const {itemsList} = this.state\r\n\r\n        return (\r\n            <div className=\"bg-light wd-wrapper\">\r\n                <SideBar active={\"items\"} />\r\n\r\n                <div className=\"wrapper-wx\" >\r\n                    <div className=\"container-fluid\" >\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h6 className=\"text-dark bold-normal py-3 bg-white shadow-sm px-3 mt-3 rounded\">\r\n                                    Items Management\r\n                                </h6>\r\n                            </div>\r\n                  \r\n                            <div className=\"col-12\">\r\n                                <div className=\"card border-0 shadow-sm rounded mt-2 bg-white pb-2\">\r\n                                 \r\n                                    <div className=\"table-responsive px-2\">\r\n                                        <table className=\"table table-stripped\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Item ID</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Item Name</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Description</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Price</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Actions</h6></th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                            {itemsList.map((item) => this.renderAllItems(item))}\r\n                                            {!this.state.isLoaded &&\r\n                                            <td colSpan={6}><h6 className=\"text-dark normal text-center py-2\">Loading...</h6></td>\r\n                                            }\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderAllItems = (item) => {\r\n        return (\r\n            <tr key={item._id}>\r\n                <td><h6 className=\"text-dark normal\">{item.item_id}</h6></td>\r\n                <td><h6 className=\"text-dark normal\">{item.item_name}</h6></td>\r\n                <td><h6 className=\"text-dark normal\">{item.description}</h6></td>\r\n                <td><h6 className=\"text-dark normal\">{`LKR ${item.price}.00`}</h6></td>\r\n                \r\n            \r\n            \r\n            <td>\r\n                <span onClick={() => this.onPressDeleteItem(item)} className=\"badge badge-danger  click font-weight-bold ml-2\">Remove</span>\r\n            </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    onPressDeleteItem = (item) => {\r\n        Config.setDeleteConfirmAlert( 'Delete Item' , 'Are you sure you want to delete this item?',\r\n        () => this.deleteItem(item) , () => console.log('canceled'))\r\n\r\n    }\r\n    deleteItem = item => {\r\n        const id = item._id;\r\n        deleteItem(id).then( result => {\r\n            this.load_items_data();\r\n            if(result.status == 200 ){\r\n                Config.setToast(\"Item Deleted Successfully\");\r\n                \r\n                \r\n            }else{\r\n                Config.setToast(result.message);\r\n            }\r\n        })\r\n        .catch( error => {\r\n            console.log(error);\r\n            Config.setErrorToast('Something Wrong Happend!');\r\n        })\r\n\r\n    }\r\n  \r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\nexport default ItemsAdmin;","      /*  eslint-disable */\r\nimport React, { Component } from 'react';\r\nimport SideBar from '../../Common/Sidebar'\r\nimport Config from '../../Controller/Config.controller'\r\nimport {get_all_suppliers, insertItem , get_all_items , deleteItem } from '../../Controller/Items.controller'\r\nimport moment from 'moment'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faPenAlt, faEye, faEnvelope, faBan } from '@fortawesome/free-solid-svg-icons'\r\n// import { config } from '@fortawesome/fontawesome-svg-core';\r\n\r\nclass AddItemsAdmin extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            sup : '' ,\r\n            isLoaded: false,\r\n            supplierList:[],\r\n            itemsList:[],\r\n            supplier:{},\r\n            item_id: '',\r\n            description:'',\r\n            item_name:'',\r\n            price:'',\r\n            supplierName:{},\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.load_data();\r\n        this.load_items_data();\r\n        \r\n    }\r\n\r\n    load_data = async () => {\r\n        get_all_suppliers().then( results => {\r\n            this.setState({supplierList: results.data.data});\r\n            console.log(\"Supplier data\",results.data.data);\r\n        }\r\n        ).catch( err=> {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    load_items_data = async () => {\r\n        get_all_items().then( results => {\r\n            this.setState({\r\n                isLoaded: true,\r\n                itemsList: results.data.data,\r\n            });\r\n            console.log(\"Items data\",results);\r\n        }\r\n        ).catch( err=> {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    handleSelect = (event) => {\r\n            this.setState({ sup : event.target.value })\r\n    }\r\n\r\n\r\n    formValueChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    onSubmit = async (e) => {\r\n        e.preventDefault()\r\n        var data = {\r\n            item_id: this.state.item_id,\r\n            item_name: this.state.item_name,\r\n            description: this.state.description,\r\n            price: this.state.price,\r\n            supplierName : this.state.sup,\r\n        }\r\n        insertItem(data).then( result => {\r\n            if(result.status == 200 ){\r\n                Config.setToast('Added Successfully!');\r\n                this.load_items_data();\r\n                this.clear();\r\n                this.props.history.push(\"/admin/items\")\r\n                \r\n            }else{\r\n                Config.setErrorToast('Something Wrong Happend!');\r\n            }\r\n        })\r\n        .catch( error => {\r\n            console.log(error);\r\n            Config.setErrorToast('Something Wrong Happend!');\r\n        })\r\n    \r\n    }\r\n\r\n    clear = () => {\r\n        this.setState({\r\n            item_name: '',\r\n            item_id: '',\r\n            description: '',\r\n            price:'',\r\n            password: Config.password,\r\n        })\r\n    }\r\n    render() {\r\n        const { item_id, description, item_name,price, supplier, supplierList , itemsList} = this.state\r\n\r\n        return (\r\n            <div className=\"bg-light wd-wrapper\">\r\n                <SideBar active={\"Additems\"} />\r\n\r\n                <div className=\"wrapper-wx\" >\r\n                    <div className=\"container-fluid\" >\r\n                        <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                                <h6 className=\"text-dark bold-normal py-3 bg-white shadow-sm px-3 mt-3 rounded\">\r\n                                   Create New Items\r\n                                </h6>\r\n                            </div>\r\n                            <div className=\"col-12\" >\r\n                                <div className=\"card border-0 shadow-sm rounded mt-2 bg-white pb-2\">\r\n                                    <form className=\" py-2  px-3 additems\"  onSubmit={(e) => this.onSubmit(e)}>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-6\">\r\n                                            <h6 className=\"form-label mb-2 mt-2\">Item ID *</h6>\r\n                                                <input\r\n                                                    id=\"itemId\"\r\n                                                    type=\"text\"\r\n                                                    name=\"item_id\"\r\n                                                    placeholder=\"Enter Item ID\"\r\n                                                    value={item_id}\r\n                                                    className=\"form-control\" \r\n                                                    onChange={(e) => this.formValueChange(e)} required></input>\r\n\r\n                                                <h6 className=\"form-label mb-2 mt-3\">Description *</h6>\r\n                                                <input\r\n                                                    id=\"item_description\"\r\n                                                    type=\"text\"\r\n                                                    name=\"description\"\r\n                                                    placeholder=\"Enter Small Description\"\r\n                                                    value={description}\r\n                                                    className=\"form-control\" \r\n                                                    onChange={(e) => this.formValueChange(e)} required></input>\r\n\r\n                                                <h6 className=\"form-label mb-2 mt-3\">Supplier *</h6>\r\n                                                    <select value={this.state.sup} onChange={this.handleSelect}  className=\"form-control\" required>\r\n                                                    <option value=\"\">Select a Supplier</option>\r\n                                                    {supplierList.map(c => <option key={c._id} value={c._id}>{c.name}</option>)}\r\n                                                    </select>\r\n                                               \r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                <h6 className=\"form-label mb-2 mt-2\">Item Name *</h6>\r\n                                                <input\r\n                                                    id=\"item_name\"\r\n                                                    type=\"text\"\r\n                                                    name=\"item_name\"\r\n                                                    placeholder=\"Enter Item Name\"\r\n                                                    value={item_name}\r\n                                                    className=\"form-control\" \r\n                                                    onChange={(e) => this.formValueChange(e)} required></input>\r\n\r\n                                                   <h6 className=\"form-label mb-2 mt-3\">Price *</h6>\r\n                                                <input\r\n                                                   id=\"item_price\"\r\n                                                    type=\"text\"\r\n                                                    name=\"price\"\r\n                                                    placeholder=\"Enter Item Price\"\r\n                                                    value={price}\r\n                                                    className=\"form-control\" \r\n                                                    onChange={(e) => this.formValueChange(e)} required></input>\r\n                                            </div>\r\n                                            <div className=\"col-md-12 mt-4\">\r\n                                                <div className=\"d-flex\">\r\n                                                    <button type=\"submit\" className=\"font-weight-bold px-2 btn btn-dark  btn-sm bold-normal\"   >\r\n                                                        Add New Item\r\n                                                </button>\r\n                                                    <button type=\"reset\" onClick={() => this.clear()} className=\"font-weight-bold px-2 ml-2  btn btn-secondary  btn-sm bold-normal\" >\r\n                                                        Cancel\r\n                                                </button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                                {/* <button onClick={() => this.getAllManagers()}>Vee</button> */}\r\n                            </div>\r\n                            {/* ----------------------------------------------------------- */}\r\n                        \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderAllItems = (item) => {\r\n        return (\r\n            <tr key={item._id}>\r\n            <td>{item.item_id}</td>\r\n            <td>{item.item_name}</td>\r\n            <td>{item.description}</td>\r\n            <td>{item.price}.00</td>\r\n            <td>\r\n                {/* <span className=\"badge badge-info rounded-0 bg-white text-success border border-secondary click font-weight-bold \">Edit</span> */}\r\n                <span onClick={() => this.deleteItem(item)} className=\"badge badge-info rounded-0 bg-white text-danger border border-secondary click font-weight-bold ml-2\">Delete</span>\r\n            </td>\r\n        </tr>\r\n        );\r\n    };\r\n\r\n    renderSessions = () => {\r\n        return [ \r\n        ...this.state.lectList.map( item => {\r\n            return {\r\n                label : `${item.name}`,\r\n                value : item.name \r\n            }\r\n        })]\r\n    }\r\n\r\n\r\n    deleteItem = item => {\r\n        const id = item._id;\r\n        deleteItem(id).then( result => {\r\n            if(result.status == 200 ){\r\n                Config.setToast(\"Item Deleted Successfully\");\r\n                this.load_items_data();\r\n                \r\n            }else{\r\n                Config.setToast(result.message);\r\n            }\r\n        })\r\n        .catch( error => {\r\n            console.log(error);\r\n            Config.setErrorToast('Something Wrong Happend!');\r\n        })\r\n        // Config.setDeleteConfirmAlert('Delete' , 'Are you sure you want to delete this ? ' , \r\n        // () => this.deleted(item._id),\r\n        // () => console.log('cancel'))\r\n    }\r\n  \r\n    deleted = async (id) => {\r\n        deleteItem(id).then( result => {\r\n            if(result.status == 200 ){\r\n                Config.setToast(\"Item Deleted Successfully\");\r\n                this.load_items_data();\r\n                \r\n            }else{\r\n                Config.setToast(result.message);\r\n            }\r\n        })\r\n        .catch( error => {\r\n            console.log(error);\r\n            Config.setErrorToast('Something Wrong Happend!');\r\n        })\r\n    //   const res = await allocatlec_CONTROLLER.deleteStudent(id);\r\n    //   if(res.status == 200){\r\n    //     Config.setToast(\"Allocated Lecture Deleted Successfully\");\r\n    //       this.load_data();\r\n    //   }else{\r\n    //     Config.setToast(res.message);\r\n    //   }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\nexport default AddItemsAdmin;","      /*  eslint-disable */\r\nimport React, { Component } from 'react';\r\nimport SideBar from '../Common/Sidebar'\r\nimport Config from '../Controller/Config.controller'\r\nimport ADMIN from '../Controller/Admin.controller'\r\nimport moment from 'moment'\r\nimport { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faPenAlt, faEye, faEnvelope, faBan } from '@fortawesome/free-solid-svg-icons'\r\nimport { gettotal, render_state, current_state, state_color } from '../Controller/Util.controller'\r\n\r\nclass CompletedOrders extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            orders: [],\r\n            loading: true,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        ADMIN.get_all_orders()\r\n            .then(result => {\r\n                this.setState({\r\n                    loading: false,\r\n                    orders: result.data.data.filter(i => i.current_state == 0 || i.current_state == 5)\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                this.setState({ loading: false })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const { orders, loading } = this.state\r\n        return (\r\n            <div className=\"bg-light wd-wrapper\">\r\n                <SideBar active={\"Completed\"} />\r\n                <div className=\"wrapper-wx\" >\r\n                    <div className=\"container-fluid\" >\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 approved_orders_us\">\r\n                                <h6 className=\"text-dark bold-normal py-3 bg-white shadow-sm px-3 mt-3 rounded\">\r\n                                    Completed Orders {orders.length > 0 &&\r\n                                        <span className=\"mx-1 badge badge-primary\">{(\"0\" + (orders.length)).slice(-2)}</span>}\r\n                                </h6>\r\n                            </div>\r\n                            {/* <div className=\"col-12\">\r\n                                <div className=\"card border-0 shadow-sm rounded mt-3 bg-white pb-2\">\r\n                                    <form className=\" py-2  px-3 \" onSubmit={(e) => this.onSubmit(e)}>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-6\">\r\n                                                <h6 className=\"form-label py-2\">Supplier Name</h6>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    name=\"name\"\r\n                                                    className=\"form-control\" ></input>\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                <h6 className=\"form-label py-2\">Site Manager Name</h6>\r\n                                                <input\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    className=\"form-control\" >\r\n                                                </input>\r\n                                            </div>\r\n                                            <div className=\"col-md-4 mt-3\">\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-md-6\">\r\n                                                        <button type=\"reset\" className=\" btn btn-secondary   bold-normal\" style={{ width: '100%' }} >\r\n                                                            Reset\r\n                                                </button>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-6\">\r\n                                                        <button type=\"submit\" className=\" btn btn-dark   bold-normal\" style={{ width: '100%' }}>\r\n                                                            Search\r\n                                                    </button>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div> */}\r\n                            {/* ----------------------------------------------------------- */}\r\n                            <div className=\"col-12\">\r\n                                <div className=\"card border-0 shadow-sm rounded mt-2 bg-white pb-2\">\r\n                                    <div className=\"table-responsive px-2\">\r\n                                        <table className=\"table table-stripped\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Delivery Date</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">No.Items</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Total</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Current State</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Actions</h6></th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {orders && orders\r\n                                                    .sort((a, b) => parseInt(a.current_state) - parseInt(b.current_state))\r\n                                                    .map((item, i) => this.display(item, i))\r\n                                                }\r\n\r\n                                                {loading &&\r\n                                                    <td colSpan={5}><h6 className=\"text-dark normal text-center py-2\">Loading...</h6></td>\r\n                                                }\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    display = (row, i) => {\r\n        return (\r\n            <tr key={row._id}>\r\n                <td><h6 className=\"text-dark normal\">{moment(row.date).format('LL')}</h6></td>\r\n                <td><h6 className=\"text-dark normal\">{(\"0\" + (row.items.length)).slice(-2)}</h6></td>\r\n                <td><h6 className=\"text-dark normal\">{`LKR ${Config.numberWithCommas(gettotal(row.items))}.00`}</h6></td>\r\n                <td><span className={` small rounded py-1 px-2 ${state_color(row.current_state)}`}>\r\n                    {current_state(row.current_state)}\r\n                </span>\r\n                </td>\r\n                <td>\r\n                    <Link to={`/admin/orders/${row._id}`}>\r\n                        <span className=\" rounded py-1 px-2 bg-success text-white\">\r\n                            <FontAwesomeIcon icon={faEye} className=\"mr-1\" /> Details\r\n                    </span>\r\n                    </Link>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n\r\n\r\n}\r\nexport default CompletedOrders;","      /*  eslint-disable */\r\nimport React, { Component } from 'react';\r\nimport SideBar from '../Common/Sidebar'\r\nimport Config from '../Controller/Config.controller'\r\nimport ADMIN from '../Controller/Admin.controller'\r\nimport moment from 'moment'\r\nimport { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faPenAlt, faEye, faEnvelope, faBan } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass RejectedOrders extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n\r\n\r\n        };\r\n    }\r\n    formValueChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    change_toggle = () => {\r\n        if (this.state.addSuplierState) {\r\n            this.setState({ addSuplierState: false })\r\n        } else {\r\n            this.setState({ addSuplierState: true })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"bg-light wd-wrapper\">\r\n                <SideBar active={\"orders\"} />\r\n                <div className=\"wrapper-wx\" >\r\n                    <div className=\"container-fluid\" >\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12\">\r\n                                <h5 className=\"text-dark bold-normal py-2 bg-white shadow-sm px-2 mt-3 rounded\">\r\n                                    Rejected  Orders\r\n                                </h5>\r\n                            </div>\r\n                            <div className=\"col-12 pre_orders_us\">\r\n                                <div className=\"card border-0 shadow-sm rounded mt-3 bg-white pb-2\">\r\n                                    <form className=\" py-2  px-3 \" onSubmit={(e) => this.onSubmit(e)}>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-6\">\r\n                                                <h6 className=\"form-label py-2\">Supplier Name</h6>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    name=\"name\"\r\n                                                    className=\"form-control\" ></input>\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                <h6 className=\"form-label py-2\">Site Manager Name</h6>\r\n                                                <input\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    className=\"form-control\" >\r\n                                                </input>\r\n                                            </div>\r\n                                            <div className=\"col-md-4 mt-3\">\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-md-6\">\r\n                                                        <button type=\"reset\" className=\" btn btn-secondary   bold-normal\" style={{ width: '100%' }} >\r\n                                                            Reset\r\n                                                </button>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-6\">\r\n                                                        <button type=\"submit\" className=\" btn btn-dark   bold-normal\" style={{ width: '100%' }}>\r\n                                                            Search\r\n                                                    </button>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                            {/* ----------------------------------------------------------- */}\r\n                            <div className=\"col-12\">\r\n                                <div className=\"card border-0 shadow-sm rounded mt-3 bg-white pb-2\">\r\n                                    <h5 className=\"text-dark bold-normal py-2 bg-white px-2\">\r\n                                        All Orders\r\n                                </h5>\r\n                                    <div className=\"table-responsive px-2\">\r\n                                        <table className=\"table table-stripped\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th scope=\"col\">Date</th>\r\n                                                    <th scope=\"col\">No.Items</th>\r\n                                                    <th scope=\"col\">Site Location</th>\r\n                                                    <th scope=\"col\">Actions</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td>{moment(new Date(\"2020-10-06\")).format('YYYY MMM DD')}</td>\r\n                                                    <td>05</td>\r\n                                                    <td>Galle - Main Street(GL05)</td>\r\n                                                    <td>\r\n                                                        <Link to=\"/admin/orders/1\">\r\n                                                        <button className=\"btn btn-success btn-sm px-2 mr-2\">\r\n                                                            <FontAwesomeIcon icon={faEye} />\r\n                                                        </button>\r\n                                                        </Link>\r\n                                                        {/* <a className=\"btn btn-info btn-sm px-2 mr-2\" href={`mailto:samankumara@gmail.com`}  >\r\n                                                            <FontAwesomeIcon icon={faEnvelope} />\r\n                                                        </a> */}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default RejectedOrders;","      /*  eslint-disable */\r\nimport React, { Component } from 'react';\r\nimport SideBar from '../Common/Sidebar'\r\nimport Config from '../Controller/Config.controller'\r\nimport ADMIN from '../Controller/Admin.controller'\r\nimport moment from 'moment'\r\nimport { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faPenAlt, faEye, faEnvelope, faBan } from '@fortawesome/free-solid-svg-icons'\r\nimport {gettotal , render_state , current_state , state_color} from '../Controller/Util.controller'\r\n\r\nclass PendingOrders extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            orders : [],\r\n            loading : true,\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        ADMIN.get_all_orders()\r\n        .then( result => {\r\n            console.log(result.data.data);\r\n            this.setState({ loading : false ,\r\n                orders : result.data.data.filter(i => i.current_state != 0 && i.current_state != 5) })\r\n        })\r\n\r\n        .catch( err => {\r\n            console.log(err);\r\n            this.setState({loading : false})\r\n        })\r\n        \r\n    }\r\n\r\n    render() {\r\n        const { orders , loading} = this.state\r\n        return (\r\n            <div className=\"bg-light wd-wrapper\">\r\n                <SideBar active={\"Pending\"} />\r\n                <div className=\"wrapper-wx\" >\r\n                    <div className=\"container-fluid\" >\r\n                        <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                                <h6 className=\"text-dark bold-normal py-3 bg-white shadow-sm px-3 mt-3 rounded\">\r\n                                  Pending Orders {orders.length > 0 && \r\n                                  <span className=\"mx-1 badge badge-primary\">{(\"0\" + (orders.length)).slice(-2)}</span>}\r\n                                </h6>\r\n                            </div>\r\n                            {/* <div className=\"col-12\">\r\n                                <div className=\"card border-0 shadow-sm rounded mt-3 bg-white pb-2\">\r\n                                    <form className=\" py-2  px-3 \" onSubmit={(e) => this.onSubmit(e)}>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-6\">\r\n                                                <h6 className=\"form-label py-2\">Supplier Name</h6>\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    name=\"name\"\r\n                                                    className=\"form-control\" ></input>\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                <h6 className=\"form-label py-2\">Site Manager Name</h6>\r\n                                                <input\r\n                                                    type=\"email\"\r\n                                                    name=\"email\"\r\n                                                    className=\"form-control\" >\r\n                                                </input>\r\n                                            </div>\r\n                                            <div className=\"col-md-4 mt-3\">\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-md-6\">\r\n                                                        <button type=\"reset\" className=\" btn btn-secondary   bold-normal\" style={{ width: '100%' }} >\r\n                                                            Reset\r\n                                                </button>\r\n                                                    </div>\r\n                                                    <div className=\"col-md-6\">\r\n                                                        <button type=\"submit\" className=\" btn btn-dark   bold-normal\" style={{ width: '100%' }}>\r\n                                                            Search\r\n                                                    </button>\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div> */}\r\n                            {/* ----------------------------------------------------------- */}\r\n                            <div className=\"col-12 pending_orders_us\">\r\n                                <div className=\"card border-0 shadow-sm rounded mt-2 bg-white pb-2\">\r\n                                    <div className=\"table-responsive px-2\">\r\n                                        <table className=\"table table-stripped\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Delivery Date</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">No.Items</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Total</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Current State</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Actions</h6></th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {orders && orders\r\n                                                        .sort((a,b) => parseInt(a.current_state) -  parseInt(b.current_state))\r\n                                                        .map((item,i) => this.display(item,i))\r\n                                                }\r\n\r\n                                                {loading &&\r\n                                                    <td colSpan={5}><h6 className=\"text-dark normal text-center py-2\">Loading...</h6></td>\r\n                                                }\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    display = (row,i) => {\r\n        return (\r\n            <tr key={row._id}>\r\n                 <td><h6 className=\"text-dark normal\">{moment(row.date).format('LL')}</h6></td>\r\n                 <td><h6 className=\"text-dark normal\">{(\"0\" + (row.items.length)).slice(-2)}</h6></td>\r\n                 <td><h6 className=\"text-dark normal\">{`LKR ${Config.numberWithCommas(gettotal(row.items))}.00`}</h6></td>\r\n                 <td><span className={`mr small rounded py-1 px-2 ${state_color(row.current_state)}`}>\r\n                        {current_state(row.current_state)}\r\n                    </span>\r\n                </td>\r\n                 <td>\r\n                 <Link to={`/admin/orders/${row._id}`}>\r\n                    <span className=\" rounded py-1 px-2 bg-success text-white\">\r\n                    <FontAwesomeIcon icon={faEye} className=\"mr-1\"/> Details\r\n                    </span>\r\n                    </Link>\r\n                 </td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n\r\n  \r\n}\r\nexport default PendingOrders;","\r\nimport SignIn from '../SignIn/Sign'\r\nimport Dashboard from '../Admin/Dashboard'\r\nimport SiteManagerAdmin from '../Admin/Components/Sitemangers.Admin'\r\nimport createUser from '../Admin/Components/createUser.Admin'\r\nimport SuppliersAdmin from '../Admin/Components/Suplier.Admin'\r\nimport OrderManagement from '../Admin/Components/Order.Admin'\r\nimport SingleSite from '../Admin/Components/single.site'\r\nimport SingleOrder from '../Admin/Components/Single.Order'\r\nimport SitesManagment from '../Admin/Components/Sites.Admin'\r\nimport ItemsManagement from '../Admin/Components/Items.Admin'\r\nimport AddItem from '../Admin/Components/addItems.Admin';\r\nimport ApprovedOrders from '../Orders/approved.order';\r\nimport RejectedOrders from '../Orders/reject.order';\r\nimport PendingOrders from '../Orders/pending.order';\r\n\r\n\r\nlet indexRoutes = [\r\n\r\n  {\r\n    path: \"/admin/dashboard\",\r\n    name: \"Dashboard\",\r\n    component: Dashboard,\r\n    exact: true,\r\n  },\r\n  {\r\n    path: \"/admin/sitemanagers\",\r\n    name: \"SiteManagerAdmin\",\r\n    component: SiteManagerAdmin,\r\n    exact: true,\r\n  },\r\n  {\r\n    path: \"/admin/createUser\",\r\n    name: \"createUser\",\r\n    component: createUser,\r\n    exact:true,\r\n  },\r\n  {\r\n    path: \"/admin/suppliers\",\r\n    name: \"SuppliersAdmin\",\r\n    component: SuppliersAdmin,\r\n    exact: true,\r\n  },\r\n  {\r\n    path: \"/admin/orders\",\r\n    name: \"OrderManagement\",\r\n    component: OrderManagement,\r\n    exact: true,\r\n  },\r\n  {\r\n    path: \"/admin/sites\",\r\n    name: \"SitesManagment\",\r\n    component: SitesManagment,\r\n    exact: true,\r\n  },\r\n  {\r\n    path: \"/admin/sites/:id\",\r\n    name: \"SingleSite\",\r\n    component: SingleSite,\r\n    exact: true,\r\n  },\r\n  {\r\n    path: \"/admin/items\",\r\n    name: \"ItemsManagement\",\r\n    component: ItemsManagement,\r\n    exact:true,\r\n  },  \r\n  {\r\n    path: \"/admin/AddItem\",\r\n    name: \"AddItem\",\r\n    component: AddItem,\r\n    exact:true,\r\n  },\r\n  {\r\n    path: \"/admin/pending\",\r\n    name: \"PendingOrders\",\r\n    component: PendingOrders,\r\n    exact:true,\r\n  },\r\n  {\r\n    path: \"/admin/completed\",\r\n    name: \"ApprovedOrders\",\r\n    component: ApprovedOrders,\r\n    exact:true,\r\n  },\r\n  {\r\n    path: \"/admin/rejected\",\r\n    name: \"RejectedOrders\",\r\n    component: RejectedOrders,\r\n    exact:true,\r\n  },\r\n  {\r\n    path: \"/admin/orders/:id\",\r\n    name: \"SingleOrder\",\r\n    component: SingleOrder,\r\n    exact: true,\r\n  },\r\n];\r\n\r\nexport default indexRoutes;\r\n","\r\nimport Dashboard from '../Admin/Dashboard'\r\nimport SiteManagerAdmin from '../Admin/Components/Sitemangers.Admin'\r\nimport SuppliersAdmin from '../Admin/Components/Suplier.Admin'\r\nimport OrderManagement from '../Admin/Components/Order.Admin'\r\nimport SingleOrder from '../Admin/Components/Single.Order'\r\nimport SitesManagment from '../Admin/Components/Sites.Admin'\r\nimport ItemsManagement from '../Admin/Components/Items.Admin'\r\nimport AddItem from '../Admin/Components/addItems.Admin';\r\nimport ApprovedOrders from '../Orders/approved.order';\r\nimport RejectedOrders from '../Orders/reject.order';\r\nimport PendingOrders from '../Orders/pending.order';\r\nimport SingleSite from '../Admin/Components/single.site'\r\n\r\nlet indexRoutes = [\r\n\r\n  {\r\n    path: \"/admin/dashboard\",\r\n    name: \"Dashboard\",\r\n    component: Dashboard,\r\n    exact: true,\r\n  },\r\n  {\r\n    path: \"/admin/sitemanagers\",\r\n    name: \"SiteManagerAdmin\",\r\n    component: SiteManagerAdmin,\r\n    exact: true,\r\n  },\r\n  {\r\n    path: \"/admin/suppliers\",\r\n    name: \"SuppliersAdmin\",\r\n    component: SuppliersAdmin,\r\n    exact: true,\r\n  },\r\n  {\r\n    path: \"/admin/orders\",\r\n    name: \"OrderManagement\",\r\n    component: OrderManagement,\r\n    exact: true,\r\n  },\r\n  {\r\n    path: \"/admin/sites\",\r\n    name: \"SitesManagment\",\r\n    component: SitesManagment,\r\n    exact: true,\r\n  },\r\n  {\r\n    path: \"/admin/sites/:id\",\r\n    name: \"SingleSite\",\r\n    component: SingleSite,\r\n    exact: true,\r\n  },\r\n  {\r\n    path: \"/admin/items\",\r\n    name: \"ItemsManagement\",\r\n    component: ItemsManagement,\r\n    exact:true,\r\n  },  \r\n  {\r\n    path: \"/admin/AddItem\",\r\n    name: \"AddItem\",\r\n    component: AddItem,\r\n    exact:true,\r\n  },\r\n  {\r\n    path: \"/admin/pending\",\r\n    name: \"PendingOrders\",\r\n    component: PendingOrders,\r\n    exact:true,\r\n  },\r\n  {\r\n    path: \"/admin/completed\",\r\n    name: \"ApprovedOrders\",\r\n    component: ApprovedOrders,\r\n    exact:true,\r\n  },\r\n  {\r\n    path: \"/admin/rejected\",\r\n    name: \"RejectedOrders\",\r\n    component: RejectedOrders,\r\n    exact:true,\r\n  },\r\n  {\r\n    path: \"/admin/orders/:id\",\r\n    name: \"SingleOrder\",\r\n    component: SingleOrder,\r\n    exact: true,\r\n  },\r\n];\r\n\r\nexport default indexRoutes;\r\n","      /*  eslint-disable */\r\nimport React, { Component } from 'react';\r\nimport SideBar from '../Common/Sidebar'\r\nimport Config from '../Controller/Config.controller'\r\nimport ADMIN from '../Controller/Admin.controller'\r\nimport moment from 'moment'\r\nimport { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faPenAlt, faEye, faEnvelope, faBan } from '@fortawesome/free-solid-svg-icons'\r\nimport { connect } from 'react-redux'\r\nimport {gettotal , render_state , current_state , state_color} from '../Controller/Util.controller'\r\nclass SupplierPending extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            orders : [],\r\n            loading : true,\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {auth } = this.props;\r\n        const myemail = auth.user.email;\r\n        let my_supplier_id = null;\r\n\r\n        ADMIN.get_all_suppliers()\r\n        .then( result => {\r\n            let supplier = result.data.data.find( i => i.email == myemail)\r\n            if(supplier){\r\n                my_supplier_id = supplier._id\r\n            }\r\n            return  ADMIN.get_all_orders()\r\n        })\r\n        .then( result => {\r\n\r\n            let data = result.data.data.filter(i => i.current_state == 0 || i.current_state == 5 ) \r\n            if(my_supplier_id != null ){\r\n                data = data.filter( i => (i.supplier == my_supplier_id && i.state.length >= 4 ))\r\n                this.setState({ loading : false , orders : data })\r\n            }else{\r\n                this.setState({ loading : false })\r\n            }\r\n        })\r\n        .catch( err => {\r\n            console.log(err);\r\n            this.setState({loading : false})\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { orders , loading} = this.state\r\n        return (\r\n            <div className=\"bg-light wd-wrapper\">\r\n                <SideBar active={\"Completed\"} />\r\n                <div className=\"wrapper-wx\" >\r\n                    <div className=\"container-fluid\" >\r\n                        <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                                <h6 className=\"text-dark bold-normal py-3 bg-white shadow-sm px-3 mt-3 rounded\">\r\n                                  My Completed Orders {orders.length > 0 && \r\n                                  <span className=\"mx-1 badge badge-primary\">{(\"0\" + (orders.length)).slice(-2)}</span>}\r\n                                </h6>\r\n                            </div>\r\n                            \r\n                            {/* ----------------------------------------------------------- */}\r\n                            <div className=\"col-12\">\r\n                                <div className=\"card border-0 shadow-sm rounded mt-2 bg-white pb-2\">\r\n                                    <div className=\"table-responsive px-2\">\r\n                                        <table className=\"table table-stripped\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Delivery Date</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">No.Items</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Total</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Current State</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Actions</h6></th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {orders && orders\r\n                                                        .sort((a,b) => parseInt(a.current_state) -  parseInt(b.current_state))\r\n                                                        .map((item,i) => this.display(item,i))\r\n                                                }\r\n\r\n                                                {loading &&\r\n                                                    <td colSpan={5}><h6 className=\"text-dark normal text-center py-2\">Loading...</h6></td>\r\n                                                }\r\n\r\n                                                {!loading && orders.length == 0 && \r\n                                                    <td colSpan={5}><h6 className=\"text-dark normal text-center py-2\">No Completed Orders Available Currently </h6></td>\r\n                                                }\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    display = (row,i) => {\r\n        return (\r\n            <tr key={row._id}>\r\n                 <td><h6 className=\"text-dark normal\">{moment(row.date).format('LL')}</h6></td>\r\n                 <td><h6 className=\"text-dark normal\">{(\"0\" + (row.items.length)).slice(-2)}</h6></td>\r\n                 <td><h6 className=\"text-dark normal\">{`LKR ${Config.numberWithCommas(gettotal(row.items))}.00`}</h6></td>\r\n                 <td><span className={`mr small rounded py-1 px-2 ${state_color(row.current_state)}`}>\r\n                        {current_state(row.current_state)}\r\n                    </span>\r\n                </td>\r\n                 <td>\r\n                 <Link to={`/admin/orders/${row._id}`}>\r\n                    <span className=\" rounded py-1 px-2 bg-success text-white\">\r\n                    <FontAwesomeIcon icon={faEye} className=\"mr-1\"/> Details\r\n                    </span>\r\n                    </Link>\r\n                 </td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n  \r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth || {},\r\n});\r\n\r\nexport default connect(mapStateToProps)(SupplierPending);","      /*  eslint-disable */\r\nimport React, { Component } from 'react';\r\nimport SideBar from '../Common/Sidebar'\r\nimport Config from '../Controller/Config.controller'\r\nimport ADMIN from '../Controller/Admin.controller'\r\nimport moment from 'moment'\r\nimport { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faPenAlt, faEye, faEnvelope, faBan } from '@fortawesome/free-solid-svg-icons'\r\nimport { connect } from 'react-redux'\r\nimport {gettotal , render_state , current_state , state_color} from '../Controller/Util.controller'\r\nclass SupplierPending extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            orders : [],\r\n            loading : true,\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {auth } = this.props;\r\n        const myemail = auth.user.email;\r\n        let my_supplier_id = null;\r\n\r\n        ADMIN.get_all_suppliers()\r\n        .then( result => {\r\n            let supplier = result.data.data.find( i => i.email == myemail)\r\n            if(supplier){\r\n                my_supplier_id = supplier._id\r\n            }\r\n            return  ADMIN.get_all_orders()\r\n        })\r\n        .then( result => {\r\n\r\n            let data = result.data.data.filter(i => i.current_state != 0 && i.current_state != 5 ) \r\n            if(my_supplier_id != null ){\r\n                data = data.filter( i => (i.supplier == my_supplier_id && i.current_state >= 3 ))\r\n                this.setState({ loading : false , orders : data })\r\n            }else{\r\n                this.setState({ loading : false })\r\n            }\r\n        })\r\n        .catch( err => {\r\n            console.log(err);\r\n            this.setState({loading : false})\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { orders , loading} = this.state\r\n        return (\r\n            <div className=\"bg-light wd-wrapper\">\r\n                <SideBar active={\"Pending\"} />\r\n                <div className=\"wrapper-wx\" >\r\n                    <div className=\"container-fluid\" >\r\n                        <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                                <h6 className=\"text-dark bold-normal py-3 bg-white shadow-sm px-3 mt-3 rounded\">\r\n                                  My Pending Orders {orders.length > 0 && \r\n                                  <span className=\"mx-1 badge badge-primary\">{(\"0\" + (orders.length)).slice(-2)}</span>}\r\n                                </h6>\r\n                            </div>\r\n                            \r\n                            {/* ----------------------------------------------------------- */}\r\n                            <div className=\"col-12\">\r\n                                <div className=\"card border-0 shadow-sm rounded mt-2 bg-white pb-2\">\r\n                                    <div className=\"table-responsive px-2\">\r\n                                        <table className=\"table table-stripped\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Delivery Date</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">No.Items</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Total</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Current State</h6></th>\r\n                                                    <th scope=\"col\"><h6 className=\"header\">Actions</h6></th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {orders && orders\r\n                                                        .sort((a,b) => parseInt(a.current_state) -  parseInt(b.current_state))\r\n                                                        .map((item,i) => this.display(item,i))\r\n                                                }\r\n\r\n                                                {loading &&\r\n                                                    <td colSpan={5}><h6 className=\"text-dark normal text-center py-2\">Loading...</h6></td>\r\n                                                }\r\n\r\n                                                {!loading && orders.length == 0 && \r\n                                                    <td colSpan={5}><h6 className=\"text-dark normal text-center py-2\">No Pending Orders Available Currently </h6></td>\r\n                                                }\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    display = (row,i) => {\r\n        return (\r\n            <tr key={row._id}>\r\n                 <td><h6 className=\"text-dark normal\">{moment(row.date).format('LL')}</h6></td>\r\n                 <td><h6 className=\"text-dark normal\">{(\"0\" + (row.items.length)).slice(-2)}</h6></td>\r\n                 <td><h6 className=\"text-dark normal\">{`LKR ${Config.numberWithCommas(gettotal(row.items))}.00`}</h6></td>\r\n                 <td><span className={`mr small rounded py-1 px-2 ${state_color(row.current_state)}`}>\r\n                        {current_state(row.current_state)}\r\n                    </span>\r\n                </td>\r\n                 <td>\r\n                 <Link to={`/admin/orders/${row._id}`}>\r\n                    <span className=\" rounded py-1 px-2 bg-success text-white\">\r\n                    <FontAwesomeIcon icon={faEye} className=\"mr-1\"/> Details\r\n                    </span>\r\n                    </Link>\r\n                 </td>\r\n            </tr>\r\n        );\r\n    }\r\n\r\n  \r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth || {},\r\n});\r\n\r\nexport default connect(mapStateToProps)(SupplierPending);","\r\nimport SignIn from '../SignIn/Sign'\r\nimport Dashboard from '../Admin/Dashboard'\r\nimport SingleOrder from '../Admin/Components/Single.Order'\r\nimport ApprovedOrders from '../Orders/supplier_completed';\r\nimport RejectedOrders from '../Orders/reject.order';\r\nimport PendingOrders from '../Orders/supplier_pending';\r\n\r\n\r\nlet indexRoutes = [\r\n\r\n  {\r\n    path: \"/admin/dashboard\",\r\n    name: \"Dashboard\",\r\n    component: Dashboard,\r\n    exact: true,\r\n  },\r\n  {\r\n    path: \"/admin/pending\",\r\n    name: \"PendingOrders\",\r\n    component: PendingOrders,\r\n    exact:true,\r\n  },\r\n  {\r\n    path: \"/admin/completed\",\r\n    name: \"ApprovedOrders\",\r\n    component: ApprovedOrders,\r\n    exact:true,\r\n  },\r\n  {\r\n    path: \"/admin/rejected\",\r\n    name: \"RejectedOrders\",\r\n    component: RejectedOrders,\r\n    exact:true,\r\n  },\r\n  {\r\n    path: \"/admin/orders/:id\",\r\n    name: \"SingleOrder\",\r\n    component: SingleOrder,\r\n    exact: true,\r\n  },\r\n];\r\n\r\nexport default indexRoutes;\r\n","\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch, useHistory, withRouter } from 'react-router-dom';\r\nimport { connect} from 'react-redux'\r\nimport indexRoutes from './Components/Routes/index'\r\nimport managerRoutes from './Components/Routes/manager.route'\r\nimport accountantRoutes from './Components/Routes/accountant.route'\r\nimport suplierRoutes from './Components/Routes/suplier.route'\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n    router = () => {\r\n    let routes = indexRoutes;\r\n\r\n   \r\n    let checkSignedIn =  this.props.auth.isAuthenticated;\r\n    let role = (checkSignedIn) ? this.props.auth.user.role : \"\";\r\n\r\n    if(checkSignedIn == true ){\r\n      routes = [ ...routes ];\r\n    }\r\n\r\n    if(checkSignedIn == true && role == 3){\r\n     routes = [ ...managerRoutes, ...routes ];\r\n    }\r\n\r\n    if(checkSignedIn == true && role == 2){\r\n     routes = [ ...accountantRoutes, ...routes ];\r\n    }\r\n\r\n    if(checkSignedIn == true && role == 0){\r\n     routes = [ ...suplierRoutes, ...routes ];\r\n    }\r\n    return routes;\r\n  } \r\n\r\n    render(){\r\n        return(\r\n            <Router >\r\n            <Switch>\r\n            { this.router().map((prop, key) => {\r\n                return (\r\n                <Route\r\n                    path={prop.path}\r\n                    key={key}\r\n                    component={(props) => <prop.component    {...props} />}\r\n                    exact={prop.exact ? true : false}\r\n\r\n                />\r\n                );\r\n            })}\r\n            </Switch>\r\n        </Router>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    auth : state.auth || {} ,\r\n  });\r\n\r\nexport default connect(mapStateToProps)(App);","import { SET_CURRENT_USER } from '../Action/types'\r\nimport isEmpty from 'lodash/isEmpty'\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {}\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_CURRENT_USER:\r\n            console.log(!isEmpty(action.user))\r\n            console.log(action.user)\r\n            return {\r\n                isAuthenticated: !isEmpty(action.user),\r\n                user: action.user\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport authReducer from \"./authReducer\";\r\n\r\nconst persistconfig = {\r\n  key: \"root\",\r\n  storage,\r\n  whitelist: [\"cart\", \"auth\", \"wishlist\"],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n});\r\n\r\nexport const root = (state, action) =>\r\n  rootReducer(action.type === \"USER_LOGOUT\" ? undefined : state, action);\r\nexport default persistReducer(persistconfig, root);\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../Reducers/index'\r\n\r\nimport { persistStore }  from 'redux-persist'\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__\r\n            ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n            : f => f\r\n    )\r\n);\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n\r\n\r\n\r\nexport default { store , persistor };","      /*  eslint-disable */\r\n\r\nimport React, { Component } from 'react';\r\nimport RootRouter from './RootRouter'\r\n// import redux\r\nimport { Provider } from 'react-redux'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n\r\nimport {store, persistor} from './Components/Redux/Store/Store'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\ntoast.configure() \r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n\r\n    };\r\n\r\n    \r\n\r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n      <PersistGate persistor={persistor} >\r\n        <RootRouter/>\r\n      </PersistGate>\r\n    </Provider>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}